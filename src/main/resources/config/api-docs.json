{
  "swagger": "2.0",
  "info": {
    "version": "1.11.0",
    "description": "This user guide describes how to use the MoDaC API.",
    "title": "MoDaC API"
  },
  "host": "fsdmel-modac01t.ncifcrf.gov",
  "basePath": "/",
  "paths": {
    "/api/collection/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific collection including all of its hierarchical metadata. Use the path parameter to specify the path to the collection of interest. In the output, the collection and selfMetadataEntries elements provide information about the collection you specified, while the parentMetadataEntries element provides information about the collection that contains the collection you specified. If you set the list parameter to true, the subCollections element lists the child collections of this collection and the dataObjects element lists the data objects of this collection. The list parameter is optional and its default is false. \n\n1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributes-file.json> -X GET <server>/api/collection/{path}?list=[true|false] -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n  \n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit?list=true' -D header.txt -o output.txt -u myemailid@nih.gov\n  ```\n",
        "summary": "Get Collection Information",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "CollectionByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "list",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n\n          {\n                \"collections\": [{\n                  \"collection\": {\n                    \"collectionId\": 941408,\n                          \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit\",\n                    \"collectionParentName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1\",\n                    \"collectionOwnerName\": \"ncidoesvct2\",\n                    \"collectionOwnerZone\": \"ncifHpcZone\",\n                    \"collectionMapId\": \"0\",\n                    \"collectionInheritance\": \"1\",\n                    \"comments\": \"\",\n                    \"info1\": \"\",\n                    \"info2\": \"\",\n                    \"createdAt\": \"2021-01-21T06:15:13.000+00:00\",\n                    \"specColType\": \"NORMAL\",\n                    \"subCollections\": [],\n                    \"dataObjects\": [{\n                      \"id\": 941458,\n                      \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit/async_upload_completion.png\",\n                      \"dataSize\": 0,\n                      \"createdAt\": null\n                    }, {\n                      \"id\": 941448,\n                      \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit/sampelnotes.rtfd.zip\",\n                      \"dataSize\": 0,\n                      \"createdAt\": null\n                    }, {\n                      \"id\": 941434,\n                      \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit/test_1_21_2021_1.txt\",\n                      \"dataSize\": 0,\n                      \"createdAt\": null\n                    }]\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"poc_email\",\n                      \"value\": \"us39@georgetown.edu\",\n                      \"unit\": null,\n                      \"level\": null,\n                      \"levelLabel\": null,\n                      \"collectionId\": null\n                    }, {\n                      \"attribute\": \"access_group\",\n                      \"value\": \"public\",\n                      \"unit\": \"EMPTY_ATTR_UNIT\",\n                      \"level\": 3,\n                      \"levelLabel\": \"Program\",\n                      \"collectionId\": null\n                    }, {\n                      \"attribute\": \"dme_data_id\",\n                      \"value\": \"NCI-DME-MS01-936666\",\n                      \"unit\": \"EMPTY_ATTR_UNIT\",\n                      \"level\": 3,\n                      \"levelLabel\": \"Program\",\n                      \"collectionId\": null\n                    }]\n                  },\n                  \"permission\": \"OWN\"\n                }],\n                \"collectionPaths\": [],\n                \"page\": null,\n                \"limit\": null,\n                \"totalCount\": null\n              }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "If you have a MoDaC user account with upload permission, you can add a collection (Program, Study, or Asset) as follows:\n•  If the collection has any custom metadata, you can update that metadata. \n\n•  If that existing collection has been configured to contain another collection, you can add a collection. \n\n•  If that existing collection has been configured to contain data files, you can add files. \n\nBy default, this service expects the containing collection for the collection you are registering to already exist at time of registration. However, you can optionally request that this service create the parent and higher-level collections. To do so, set the ‘createParentCollections’ indicator in the json file to true, and provide a list of metadata to create the parent collections through parentCollectionsBulkMetadataEntries. In this case, this service creates the entire collection hierarchy above the registered collection.\n\n1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributes-file.json> -X PUT <server>/api/collection/{path} -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  \n  ```\n  2.  **Attributes-file.json Example**\n  ```\n     {\n        \"metadataEntries\": [{\n            \"attribute\": \"study_identifier\",\n            \"value\": \"study_1_udit\"\n          },\n          {\n            \"attribute\": \"collection_type\",\n            \"value\": \"Study\"\n          }\n        ],\n        \"createParentCollections\": true,\n        \"parentCollectionsBulkMetadataEntries\": {\n          \"defaultCollectionMetadataEntries\": [{\n            \"attribute\": \"collection_type\",\n            \"value\": \"Folder\"\n          }]\n        }\n      }\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -H \"Content-Type: application/json\" -d @collection.json -X PUT https://modac.cancer.gov/api/collection/NCI_DOE_Archive/testnew/1_18_2020 -H \"Accept: application/json\" -D header.txt -o output.json -u us39@georgetown.edu\n  ```\n",
        "summary": "Register a Collection",
        "tags": [
          "Upload Data"
        ],
        "operationId": "CollectionByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/collection/query": {
      "post": {
        "description": "This service allows you to perform a query for a collection. \n\n  1. **CURL COMMAND TO GET GET A BOOKMARK BY NAME**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributes-file.json> -X POST <server>/api/collection/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n  \n  ```\n  2.  **Attributes-file.json Example**\n  ```\n         {\n          \"compoundQuery\": {\n          \"operator\": \"AND\",\n          \"queries\": [{\n        \"attribute\": \"access_group\",\n        \"value\": \"public\",\n        \"operator\": \"LIKE\"\n          },\n                         {\n            \"attribute\": \"collection_type\",\n          \"value\": \"Asset\",\n        \"operator\": \"LIKE\"\n          }]},\n              \"detailedResponse\": true,\n            \"page\": 1,\n            \"pageSize\": 100,\n            \"totalCount\": true,\n  \n        }\n\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @Attributes-file.json -X POST https://modac.cancer.gov/api/collection/query -H \"Accept: application/json\" -D demo2_udit.txt -o output_2_udit.json -u us39@georgetown.edu\n  ``` \n",
        "summary": "Find Collection by Metadata Query",
        "tags": [
          "Search Data"
        ],
        "operationId": "CollectionQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n             {\n                \"collections\": [{\n                  \"collection\": {\n                    \"collectionId\": 936753,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"collectionParentName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1\",\n                    \"collectionOwnerName\": \"ncidoesvct2\",\n                    \"collectionOwnerZone\": \"ncifHpcZone\",\n                    \"collectionMapId\": \"0\",\n                    \"collectionInheritance\": \"1\",\n                    \"comments\": null,\n                    \"info1\": null,\n                    \"info2\": null,\n                    \"createdAt\": \"2020-09-24T16:10:22.000+00:00\",\n                    \"specColType\": null,\n                    \"subCollections\": [],\n                    \"dataObjects\": []\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"configuration_id\",\n                      \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"dme_data_id\",\n                      \"value\": \"NCI-DME-MS01-936753\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"poc_email\",\n                      \"value\": \"mounica.ganta@gmail.com\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"access_group\",\n                      \"value\": \"public\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"permission\": null\n                }],\n                \"collectionPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 71\n              }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/{path}/generateDownloadRequestURL": {
      "post": {
        "description": "If you have a MoDaC user account, you can download that data. This service allows you to generate a download request URL to download data file directly from MoDaC.\n\n1. **CURL COMMAND**\n   ```\n   curl -k -H \"Content-Type: application/json\" -X GET <server>/api/ dataObject/{path}/generateDownloadRequestURL -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  \n   ```\n   2. **EXAMPLE - CURL COMMAND**\n   ```\n   curl -k -H \"Content-Type: application/json\" -X GET https://modac.cancer.gov/api/dataObject/NCI_DOE_Archive/testnew/12_1_2020/Data_12_1/bulk_metadata_file2.txt/generateDownloadRequestURL -H \"Accept: application/json\" -D demo1_udit.txt -o output_1_udit.json -u us39@georgetown.edu\n   ``` \n",
        "summary": "Generate a Download Request URL",
        "tags": [
          "Download Data"
        ],
        "operationId": "DataObjectGenerateDownloadRequestURLByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/query": {
      "post": {
        "description": "This service allows you to perform a query for a data file. You can perform a simple query, or you can combine multiple simple queries into a compound query.\n\nA simple query consists of the following parts: \n\n•  \"attribute\"\n\n•  \"value\"\n\n•  \"operator\"\n\n•  “levelFilter”\n\n•  “attributeMatch”\n\nA compound query consists of the following parts:\n\n1.  Join operator\n\n2.  List of queries (filtering criteria)\n\n3.  List of compound queries (filtering criteria)\n\nA compound query should at least have one simple query that could be part of a list of queries or a list of nested compound queries.\n\nYou can use a join operator to combine multiple simple or compound queries (or both simple and compound). Valid values are as follows: \n\n“AND” \n\n“OR”\n\nConsider the following indicators: \n\n•detailedResponse: By default, the search returns only the path of matched resulted data files. If “detailedResponse=true”, this service returns data files with metadata.\n\n•page: Ask for a specific page of results. By default, the query returns the first 100 results in page 1, the second 100 in page 2, and so on. If omitted, the query fetches page 1. \n\n•totalCount: If you set this indicator to ‘true’, this service returns a total count of data files matching the query regardless of the query limit and page. The default for this indicator is false, so if you omit it, this service does not return a total count. \n\n1. **CURL COMMAND**\n```\ncurl -k -H \"Content-Type: application/json\" -d @<attributes-file.json> -X POST <server>/api/dataobject/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n\n```\n2.  **Attributes-file.json Example**\n```\n    {\n    \"compoundQuery\": {\n      \"operator\": \"AND\",\n      \"queries\": [{\n          \"attribute\": \"asset_identifier\",\n          \"value\": \"H1_Selectivity_Assay\",\n          \"operator\": \"LIKE\"\n        },\n        {\n          \"attribute\": \"data_transfer_status\",\n          \"value\": \"ARCHIVED\",\n          \"operator\": \"LIKE\"\n                  }\n                ]\n              },\n          \"page\": 1,\n          \"totalCount\": true\n        }\n\n```\n3. **EXAMPLE - CURL COMMAND**\n```\ncurl -H \"Content-Type: application/json\" -d @dataobjectquery.json -X POST https://modac.cancer.gov/api/dataObject/query?returnParent=true -H \"Accept: application/json\" -D header.txt -o output_true.json -u us39@georgetown.edu\n```\n\n",
        "summary": "Find Data File by Compound Metadata Query",
        "tags": [
          "Search Data"
        ],
        "operationId": "DataObjectQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK\n**Output**: \n\n            {\n                \"dataObjects\": [{\n                  \"dataObject\": {\n                    \"id\": 936762,\n                    \"collectionId\": 936753,\n                    \"dataName\": null,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataSize\": 0,\n                    \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataOwnerName\": \"ncif-hpcdm-svc\",\n                    \"createdAt\": \"2020-09-24T16:12:45.000+00:00\"\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"uuid\",\n                      \"value\": \"5a9b2128-88e2-4c35-8741-b7ba429d1f40\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by\",\n                      \"value\": \"ncidoesvct2\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by_name\",\n                      \"value\": \"DOE DOE\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"data_transfer_started\",\n                      \"value\": \"09-24-2020 12:13:12\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"archive_file_id\",\n                      \"value\": \"NCI_DOE_Archive/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"dme_data_id\",\n                      \"value\": \"NCI-DME-MS01-936753\",\n                      \"unit\": null,\n                      \"level\": 2,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"metadata_updated\",\n                      \"value\": \"09-24-2020 12:10:26\",\n                      \"unit\": null,\n                      \"level\": 2,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"percentComplete\": null,\n                  \"permission\": null\n                }],\n                \"dataObjectPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 70",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/collection/{path}/download": {
      "post": {
        "description": "If you have a MoDaC user account, you can download that data. This service allows you to transfer a data file from MoDaC to an accessible Globus location (asynchronous download) or an AWS S3 bucket. The path parameter represents the logical path of the collection registered with MoDaC. Provide either a Globus destination which describes the endpoint, or S3 destination which includes S3 bucket and account. \n\nFor a Globus destination, if you set the optional ‘destinationOverwrite’ indicator to ‘true’ and if the destination file exists, this service overwrites the destination file. If you omit this indicator and the destination file exists, then this service rejects the transfer request.  \n\n**Note**: As a prerequisite for downloading data from MoDaC to a Globus endpoint, you must grant write access to the service account. For details, refer to \"Preparing to Use Globus with MoDaC\"  \n\nFor an S3 destination, valid S3 account information is mandatory. \n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<Attributes-file.json> -X POST <server>/api/v2/collection/{path}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n \n ```\n 2.  **Attributes-file.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        { \n          \"globusDownloadDestination\": {\n                                \"destinationOverwrite\" : true,\n            \"destinationLocation\": {\n              \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-2\",\n              \"fileId\": \"/coll-Udit-2-15-2021\"\n            }\n          }\n        }\n        \n  b. To request a download to AWS S3\n        { \n          \"s3DownloadDestination\": {\n            \"destinationLocation\": {\n              \"fileContainerId\": \"ccbr-sbg-1\",\n              \"fileId\": \"coll-many-files-12-10-18\"\n            },\n            \"account\" : {\n              \"accessKey\" : \"<insert-access-key\",\n              \"secretKey\" : \"<insert-secret-key\",\n              \"region\" :\"us-east-2\"\n            }\n          }\n        }\n\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @Attributes-file.json -X POST https://modac.cancer.gov/api/v2/collection/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_udit/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@georgetown.edu\n ```\n",
        "summary": "Download a Collection",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2CollectionDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific data file including all of its hierarchical metadata. Use the path parameter to specify the path to the collection of interest. In the output, the dataObject and selfMetadataEntries elements provide information about the file you specified, while the parentMetadataEntries element provides information about the collection that contains the file you specified.\n\n1. **CURL COMMAND**\n\n  ```\n  A) When IncludeAcl is set to true\n  \n  curl -k '<server>/api/v2/<DataObject Path>?includeAcl=true' -D header.txt -o output.txt -u <Your Email Id>\n  \n  B) When IncludeAcl is set to false\n  \n  curl -k '<server>/api/v2/<DataObject Path>?includeAcl=false' -D header.txt -o output.txt -u <Your Email Id>\n  \n  ```\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  A) When IncludeAcl is set to true\n  \n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat?includeAcl=true' -D header.txt -o output.txt -u us39@georgetown.edu\n  \n  B) When IncludeAcl is set to false\n  \n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat?includeAcl=false' -D header.txt -o output.txt -u us39@georgetown.edu\n  ```\n",
        "summary": "Get Data File Information",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "DataObjectByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n             {\n                  \"dataObjects\": [{\n                    \"dataObject\": {\n                      \"id\": 936770,\n                      \"collectionId\": 936753,\n                      \"dataName\": null,\n                      \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                      \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat\",\n                      \"dataSize\": 0,\n                      \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat\",\n                      \"dataOwnerName\": \"ncif-hpcdm-svc\",\n                      \"createdAt\": \"2020-09-24T16:13:14.000+00:00\"\n                    },\n                    \"metadataEntries\": {\n                      \"selfMetadataEntries\": [{\n                        \"attribute\": \"data_transfer_status\",\n                        \"value\": \"ARCHIVED\",\n                        \"unit\": null,\n                        \"level\": null,\n                        \"levelLabel\": null,\n                        \"collectionId\": null\n                      }, {\n                        \"attribute\": \"registered_by\",\n                        \"value\": \"ncidoesvct2\",\n                        \"unit\": null,\n                        \"level\": null,\n                        \"levelLabel\": null,\n                        \"collectionId\": null\n                      },  {\n                        \"attribute\": \"program_description\",\n                        \"value\": \"The Joint Design of Advanced Computing Solutions for Cancer (JDACS4C) program was created as part of the Cancer Moonshot to accelerate cancer research using emerging exascale computing capabilities. It is a cross-agency collaboration between NCI and the Department of Energy (DOE). Investigators from NCI and the Frederick National Laboratory for Cancer Research work collaboratively with experts in computational, data, and physical sciences from four DOE national laboratories: Argonne, Los Alamos, Lawrence Livermore, and Oak Ridge.\",\n                        \"unit\": \"EMPTY_ATTR_UNIT\",\n                        \"level\": 4,\n                        \"levelLabel\": \"Program\",\n                        \"collectionId\": null\n                      }, {\n                        \"attribute\": \"program_name\",\n                        \"value\": \"Advanced Computing Solutions for Cancer (JDACS4C)\",\n                        \"unit\": \"EMPTY_ATTR_UNIT\",\n                        \"level\": 4,\n                        \"levelLabel\": \"Program\",\n                        \"collectionId\": null\n                      }, {\n                        \"attribute\": \"dme_data_id\",\n                        \"value\": \"NCI-DME-MS01-936666\",\n                        \"unit\": \"EMPTY_ATTR_UNIT\",\n                        \"level\": 4,\n                        \"levelLabel\": \"Program\",\n                        \"collectionId\": null\n                      }]\n                    },\n                    \"percentComplete\": null,\n                    \"permission\": null\n                  }],\n                  \"dataObjectPaths\": [],\n                  \"page\": null,\n                  \"limit\": null,\n                  \"totalCount\": null\n                }\n                           ",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "\"If you have permissions to modify an existing collection, you can upload data to that collection in the following ways:\n\n  •  If that existing collection has been configured to contain another\ncollection, you can add a collection. \n\n•  If that existing collection has been configured to contain data files, you can add files. \n•  If the collection has any custom metadata, you can update that metadata. \n\n\n For obtaining upload/modify permissions, please contact modac-support@nih.gov\n\n\n\n1. **CURL COMMAND**\n ```\n A. Sync Registration \n \ncurl -k -F \"dataObjectRegistration=@<Attributes-File.json>;type=application/json\" -F \"doeDataFile=@<filePath>\" -X PUT <server>/api/v2/dataObject/<collection path>/<file name> -u < Email ID>\n\nB. Async Regitration\ncurl -k -F \"dataObjectRegistration=@globus.json;type=application/json\" -X PUT <server>/api/v2/dataObject/<collection path>/<dataObject Name> -D header.txt -o output.json -u <Your Email ID>\n \n ```\n 2.  **Attributes-file.json Example**\n \n ```\n  A. Sync Upload - Attributes-File.json\n        { \n          \"metadataEntries\": [\n            {\n              \"attribute\": \"description\",\n              \"value\": \"my-dataObject-description\"\n            },\n            {\n              \"attribute\": \"my-second-attribute-name\",\n              \"value\": \"my-second-attribute-value\"\n            }\n          ]\n      }\n      \n  B. Register from Globus - AttributeS-File.json\n  \n         {\n            \"globusUploadSource\": {\n              \"sourceLocation\": {\n                \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                \"fileId\": \"test.txt\"\n              }\n            },\n            \"metadataEntries\": [{\n              \"attribute\": \"description\",\n              \"value\": \"Tes1\"\n            }, {\n              \"attribute\": \"Asset Type\",\n              \"value\": \"test\"\n            },{\n                          \"attribute\": \"Asset_identifier\",\n                          \"value\": \"test\"\n                  },{\n                          \"attribute\": \"Asset_name\",\n                          \"value\": \"test\"\n                  }]\n          }\n        \n  C. Register from S3 - AttributeS-File.json\n          {\n              \"s3UploadSource\": {\n                \"sourceLocation\": {\n                  \"fileContainerId\": \"s3-bucket-name\",\n                  \"fileId\": \"s3-object-key\"\n                },\n                \"account\" : {\n                  \"accessKey\" : \"aws-access-key\",\n                  \"secretKey\" : \"aws-secret-key\",\n                  \"region\" :\"aws-region\"\n                }\n              },\n              \"metadataEntries\": [\n                {\n                  \"attribute\": \"description\",\n                  \"value\": \"my-file-description\"\n                }, \n                {\n                  \"attribute\": \"my-second-attribute-name\",\n                  \"value\": \"my-second-attribute-description\"\n                }\n              ]\n            }\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n \n ```\n A. Sync Registration \n curl -k -F \"dataObjectRegistration=@syncupload.json;type=application/json\" -F \"doeDataFile=@header.txt\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/header_udit.txt -u us39@georgetown.edu\n \n A. Aync Registration\n curl -k -F \"dataObjectRegistration=@globus.json;type=application/json\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/test_1_28_2021_globus_new.txt -D header.txt -o output.json -u us39@georgetown.edu\n ```",
        "summary": "Register Data File",
        "tags": [
          "Upload Data"
        ],
        "operationId": "DataObjectByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}/download/": {
      "post": {
        "description": "If you have a MoDaC user account, you can download the data. This service allows you to transfer a data file from MoDaC to one of the following possible destinations: \n\n• Your file system (synchronous download) \n\n• Globus endpoint (asynchronous download) \n\n• AWS S3 (asynchronous download) \n\nAs a prerequisite for downloading data from MoDaC to a Globus endpoint, you must grant write access to the service account. For details, refer to \"Preparing to Use Globus with MoDaC\"  \n\n1. **CURL COMMAND**\n   ```\n    curl -k -H \"Content-Type: application/json\" -d @<attributes-file.json> -X POST <server>/api/v2/dataObject/{path:.*}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email IdD>\n  \n  2.  **JSON FILE EXAMPLES**\n  ``` \n  a. To request download to FileSystem\n                \n        { \n          \"metadataEntries\": [\n            {\n              \"attribute\": \"description\",\n              \"value\": \"my-dataObject-description\"\n            },\n            {\n              \"attribute\": \"my-second-attribute-name\",\n              \"value\": \"my-second-attribute-value\"\n            }\n          ]\n      }\n\n  \n  b. To request a download to a Globus endpoint\n\n      \n      \"JSON:\n      {\n        \"globusDownloadDestination\": {\n          \"destinationLocation\": {\n          \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-22000b9923ef\",\n            \"fileId\": \"test-2-02-21\"\n          },\n       \"destinationOverwrite\" : true,\n        }\n      }\n     \n      \n c.   To request a download to Amazon S3 bucket\n          {\n            \"s3DownloadDestination\": {\n              \"destinationLocation\": {\n                \"fileContainerId\": \"ccbr-sbg-1\",\n                \"fileId\": \"demo-file-2-2-21\"\n              },\n              \"account\" : {\n                \"accessKey\" : \"***\",\n                \"secretKey\" : \"***\",\n                \"region\" :\"us-east-1\",\n              },\n          \"destinationURL\" : “https://...”\n            }\n          }\n\n\n  \n  ```\n  3. **EXAMPLE - CURL COMMAND to download file to Globus**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributes-file.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/testnew/12_1_2020/Data_12_1/bulk_metadata_file2.xlsx/download -H \"Accept: application/json\" -D header.txt -u us39@georgetown.edu\n  ```\n  \n  \n  4. **EXAMPLE - CURL COMMAND to download file to s3**\n  \n  \n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributes-file.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/testnew/12_1_2020/Data_12_1/bulk_metadata_file2.xlsx/download -H \"Accept: application/json\" -D header_S3.txt -u us39@georgetown.edu\n  ```\n  \n  \n  \n  5.  **EXAMPLE - CURL COMMAND to download file to FileSystem**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributes-file.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/testnew/12_1_2020/Data_12_1/bulk_metadata_file2.xlsx/download -H \"Accept: application/json\" -D header_local.txt -u us39@georgetown.edu\n  ```\n",
        "summary": "Download a Data File",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2DataObjectDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/download": {
      "post": {
        "description": "This API transfers a list of collections from MoDaC to another accessible Globus location, AWS S3 bucket, or Google Drive. The caller provides a list of collection paths, and destination information which is the Globus endpoint to download to, the AWS S3 bucket and account, or Google Drive access token and folder name.\n\nNote: Write access right needs to be granted to the service account if a user downloads a data file from Archive to a Globus end point. S3 account must be provided for S3 destination\n\nAn optional ‘appendPathToDownloadDestination’ indicator can be provided. If set to true, the entire object path (as it is in iRODS) will be used when files are created in the download destination, otherwise, just the file name from iRODs is used. By default this indicator is set to true.\n\n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<Attributes-file.json> -X POST <server>/api/v2/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n \n ```\n 2.  **Attributes-file.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        {\n             \"collectionPaths\" : [\n                 \"/NCI_DOE_Archive/udit_test/udit_identifier\",\n                 \"/NCI_DOE_Archive/testnew/12_1_2020/Data_12_1\"\n        ],\n        \"globusDownloadDestination\": {\n                \"destinationOverwrite\" : true,\n                  \"destinationLocation\": {\n                      \"fileContainerId\": \"16572124-19cb-11e9-934d-0f4\",\n                          \"fileId\": \"bulk-collections-1_28_2021_2nd\"\n                        }\n        }\n        }\n        \n  b. To request a download to AWS S3\n        {\n          \"collectionPaths\": [\n            \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_2/Test1\",\n            \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_2/Test2\"\n          ],\n          \"s3DownloadDestination\": {\n          \"destinationLocation\": {\n            \"fileContainerId\": \"ccbr-sbg-1\",\n            \"fileId\": \"eran-collection-bulk-download-08-17-19\"\n          },\n          \"account\": {\n            \"accessKey\": \"your-access-key\",\n            \"secretKey\": \"your-secret-key\",\n            \"region\": \"us-east-2\"\n          }\n        },\n        \"appendPathToDownloadDestination\": true\n      }\n\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @attributes-file.json -X POST https://modac.cancer.gov/api/v2/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@georgetown.edu\n ```\n",
        "summary": "Download collection list",
        "tags": [
          "Download Data"
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    }
  },
  "definitions": {
    "HpcBulkDataObjectDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "appendPathToDownloadDestination": {
          "type": "boolean"
        },
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDriveDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        }
      },
      "title": "HpcBulkDataObjectDownloadRequestDTO",
      "xml": {
        "name": "HpcBulkDataObjectDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntries": {
      "type": "object",
      "properties": {
        "defaultCollectionMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "pathsMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcBulkMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntries",
      "xml": {
        "name": "HpcBulkMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntry": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntry",
      "xml": {
        "name": "HpcBulkMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionRegistrationDTO": {
      "type": "object",
      "properties": {
        "createParentCollections": {
          "type": "boolean"
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        }
      },
      "title": "HpcCollectionRegistrationDTO",
      "xml": {
        "name": "HpcCollectionRegistrationDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQuery": {
      "type": "object",
      "properties": {
        "compoundQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCompoundMetadataQuery"
          }
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "AND",
            "OR"
          ]
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataQuery"
          }
        }
      },
      "title": "HpcCompoundMetadataQuery",
      "xml": {
        "name": "HpcCompoundMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQueryDTO": {
      "type": "object",
      "properties": {
        "compoundQuery": {
          "xml": {
            "name": "compoundQuery",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcCompoundMetadataQuery"
        },
        "compoundQueryType": {
          "type": "string",
          "xml": {
            "name": "compoundQueryType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "COLLECTION",
            "DATA_OBJECT"
          ]
        },
        "detailedResponse": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "boolean"
        }
      },
      "title": "HpcCompoundMetadataQueryDTO",
      "xml": {
        "name": "HpcCompoundMetadataQueryDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRegistrationRequestDTO": {
      "type": "object",
      "properties": {
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "checksum": {
          "type": "string",
          "xml": {
            "name": "checksum",
            "attribute": false,
            "wrapped": false
          }
        },
        "createParentCollections": {
          "type": "boolean"
        },
        "extractMetadata": {
          "type": "boolean"
        },
        "extractedMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "fileSystemUploadSource": {
          "xml": {
            "name": "fileSystemUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "generateUploadRequestURL": {
          "type": "boolean"
        },
        "globusUploadSource": {
          "xml": {
            "name": "globusUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "googleDriveUploadSource": {
          "xml": {
            "name": "googleDriveUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "linkSourcePath": {
          "type": "string",
          "xml": {
            "name": "linkSourcePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        },
        "s3UploadSource": {
          "xml": {
            "name": "s3UploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "uploadParts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectRegistrationRequestDTO",
      "xml": {
        "name": "HpcDataObjectRegistrationRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDriveDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        },
        "synchronousDownloadFilter": {
          "xml": {
            "name": "synchronousDownloadFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcSynchronousDownloadFilter"
        }
      },
      "title": "HpcDownloadRequestDTO",
      "xml": {
        "name": "HpcDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcFileLocation": {
      "type": "object",
      "properties": {
        "fileContainerId": {
          "type": "string",
          "xml": {
            "name": "fileContainerId",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileContainerName": {
          "type": "string",
          "xml": {
            "name": "fileContainerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileId": {
          "type": "string",
          "xml": {
            "name": "fileId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcFileLocation",
      "xml": {
        "name": "HpcFileLocation",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGlobusDownloadDestination": {
      "type": "object",
      "properties": {
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "destinationOverwrite": {
          "type": "boolean"
        }
      },
      "title": "HpcGlobusDownloadDestination",
      "xml": {
        "name": "HpcGlobusDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGoogleDriveDownloadDestination": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcGoogleDriveDownloadDestination",
      "xml": {
        "name": "HpcGoogleDriveDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntry": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "levelLabel": {
          "type": "string",
          "xml": {
            "name": "levelLabel",
            "attribute": false,
            "wrapped": false
          }
        },
        "unit": {
          "type": "string",
          "xml": {
            "name": "unit",
            "attribute": false,
            "wrapped": false
          }
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataEntry",
      "xml": {
        "name": "HpcMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQuery": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "attributeMatch": {
          "type": "string",
          "xml": {
            "name": "attributeMatch",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "ANY",
            "EXACT"
          ]
        },
        "format": {
          "type": "string",
          "xml": {
            "name": "format",
            "attribute": false,
            "wrapped": false
          }
        },
        "levelFilter": {
          "xml": {
            "name": "levelFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataQueryLevelFilter"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataQuery",
      "xml": {
        "name": "HpcMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQueryLevelFilter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "xml": {
            "name": "label",
            "attribute": false,
            "wrapped": false
          }
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        }
      },
      "title": "HpcMetadataQueryLevelFilter",
      "xml": {
        "name": "HpcMetadataQueryLevelFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3Account": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string",
          "xml": {
            "name": "accessKey",
            "attribute": false,
            "wrapped": false
          }
        },
        "region": {
          "type": "string",
          "xml": {
            "name": "region",
            "attribute": false,
            "wrapped": false
          }
        },
        "secretKey": {
          "type": "string",
          "xml": {
            "name": "secretKey",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcS3Account",
      "xml": {
        "name": "HpcS3Account",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3DownloadDestination": {
      "type": "object",
      "properties": {
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcS3DownloadDestination",
      "xml": {
        "name": "HpcS3DownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcStreamingUploadSource": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "sourceInputStream": {
          "xml": {
            "name": "sourceInputStream",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/InputStream"
        },
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "sourceSize": {
          "type": "integer",
          "format": "int64"
        },
        "sourceURL": {
          "type": "string",
          "xml": {
            "name": "sourceURL",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcStreamingUploadSource",
      "xml": {
        "name": "HpcStreamingUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcSynchronousDownloadFilter": {
      "type": "object",
      "properties": {
        "compressedArchiveType": {
          "type": "string",
          "xml": {
            "name": "compressedArchiveType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "TAR",
            "TGZ",
            "ZIP"
          ]
        },
        "includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patternType": {
          "type": "string",
          "xml": {
            "name": "patternType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "REGEX",
            "SIMPLE"
          ]
        }
      },
      "title": "HpcSynchronousDownloadFilter",
      "xml": {
        "name": "HpcSynchronousDownloadFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcUploadSource": {
      "type": "object",
      "properties": {
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcUploadSource",
      "xml": {
        "name": "HpcUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    }
  }
}