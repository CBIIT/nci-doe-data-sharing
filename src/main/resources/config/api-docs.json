{
  "swagger": "2.0",
  "info": {
    "version": "1.11.0",
    "description": "This user guide describes how to use the MoDaC REST Application Programming Interface.\n\nThe MoDaC REST API provides the ability to upload and download assets,  manage associated metadata, and search for assets against these metadata. Assets include datasets and machine learning models.\n\nA *collection* is a logical directory on MoDaC. A data object represents an individual file. Data objects reside in collections. Collections can also contain other collections. Collections and data objects can be logically structured in a hierarchal manner, depicted with a tree structure with parents and children.\n\nA *metadata attribute* consists of the attribute name and the attribute value. Each object or collection is associated with its required and user defined metadata. The required metadata needs to be provided when the collection or object is first created.\n\nA *collection* is associated with a type, defined by the collection_type attribute.  MoDaC presently supports three collection types – Program, Study and Asset, organized hierarchically.  Program is the top level collection. A Program can contain one or more collections of type Study, and a Study can contain one of more collections of type Asset. The asset_type attribute denotes the type of an Asset. It can take on the value model or dataset.\n\nA *child* entity (collection or data object) always inherits the metadata of its parent and other ancestors in that hierarchy. This facilitates advanced searches where the data objects or collections can be searched based on their own metadata or their parent metadata. Searches can also be limited to a specific level in the hierarchy.\n\nA *fileContainerId* is the Globus endpoint UUID or AWS S3 bucket name. \n\nA *fileId*, when registering data to DME, is the full path of the file or collection which exists at the Globus or AWS S3 location. When downloading data to a Globus endpoint or to an AWS S3 bucket, *fileId* will be the destination file name or collection name.  ",
    "title": "MoDaC API"
  },
  "host": "modac.cancer.gov",
  "basePath": "/",
  "paths": {
    "/api/authenticate": {
      "get": {
        "description": "This service allows you to generate an authentication token which can be used instead of the username and password. \n1. **CURL COMMAND**\n  ```\n  curl -k https://modac.cancer.gov/api/authenticate -u <Your Email Id>\n  ```\n2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k https://modac.cancer.gov/api/authenticate -u us39@nih.gov\n  \n  Token Response Example:\n  \n  eyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1s\n  ```\n\nOnce the token is returned, you must create a file *curl-conf* and put the generated token inside that file to use it for running any command. \n\n  The *curl-conf* file should contain the following content :\n  \n\n-H \"Authorization:Bearer *Authentication token*\"\n\n3. **EXAMPLE - *curl-conf* file.**\n  ```\n  -H \"Authorization:Bearer eyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1\"\n  ```\n4. **EXAMPLE - Using Authentication token with curl commands.**\n  ```\n  curl --config curl-conf -k 'https://modac.cancer.gov/api/collection/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data' -D header.txt -o output.json\n  ```\n  \n",
        "tags": [
          "Authenticate"
        ],
        "summary": "Generate an authentication token.",
        "operationId": "authenticateUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "```\neyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1s\n```"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v2/registration/{taskId}": {
      "get": {
        "description": "This service allows you to get the status of a registration task. The *taskId* parameter is the task identifier returned in the *Registration REST API* response. \n\nThis service returns the status and path of each file in MoDaC.\n\n1. **CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/v2/registration/{taskId}' -D header.txt -o output.json -u <Your Email ID>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/v2/registration/c857706a-a916-4d35-9903-db494ff72a36  -D header.txt -o output.json -u myemailid@nih.gov\n  ```\n",
        "summary": "Get the status of a registration task.",
        "tags": [
          "Get Task Status"
        ],
        "operationId": "registrationStatusByTaskId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "```\n{  \n            inProgress: false\n            task:\n              taskId: c857706a-a916-4d35-9903-db494ff72a36\n              result: true\n              completedItems:\n                - path: /NCI_DOE_Archive/Program_demo/Study_9_19_2022/Asset_9_16_2022/autoencoder_ratchet.index\n                  result: true\n                  completed: 1663309760000\n                  effectiveTransferSpeed: 89\n              effectiveTransferSpeed: 89\n              created: 1663309705911\n              completed: 1663309775519\n }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/collection/download/{taskId}": {
      "get": {
        "description": "This service allows you to get the status of a collection download task. The *taskId* parameter is the task identifier returned in the *Collection Download* REST API response. \n\nThis service returns the download status of each file in MoDaC.\n\n1. **CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/download/{taskId}' -D header.txt -o output.json -u <Your Email ID>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/download/bb0d13ca-2026-4153-9c13-c63c7fadffe2 -D header.txt -o output.json -u JaneDoe@nih.gov\n  ```\n",
        "summary": "Get the status of a collection download task.",
        "tags": [
          "Get Task Status"
        ],
        "operationId": "collectionDownloadStatusByTaskId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "```\n   {\n    \"inProgress\": false,\n    \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/asset_udit\",\n    \"destinationLocation\": {\n      \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n      \"fileId\": \"bulk-collections-9_18_2022\"\n    },\n    \"destinationType\": \"GLOBUS\",\n    \"result\": \"COMPLETED\",\n    \"completedItems\": [{\n      \"dataObjectDownloadTaskId\": \"3ee39875-069e-4386-94dc-65686204d70b\",\n      \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/asset_udit/Analysis_9_18_2022.txt\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n        \"fileId\": \"bulk-collections-1_28_2021/Analysis_9_18_2022.txt\"\n      },\n      \"result\": \"COMPLETED\",\n      \"effectiveTransferSpeed\": 1857,\n      \"size\": 170468\n    }, {\n      \"dataObjectDownloadTaskId\": \"b06cd192-5ee7-4012-bdc1-7f89a2b2f158\",\n      \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/asset_udit/Analysis_7_15_2022.txt\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n        \"fileId\": \"bulk-collections-9_21_2022/Analysis_7_15_2022.txt\"\n      },\n      \"result\": \"COMPLETED\",\n      \"effectiveTransferSpeed\": 143,\n      \"size\": 12035\n    }, {\n      \"dataObjectDownloadTaskId\": \"74d80965-f300-4cdf-a551-c74b6a802a72\",\n      \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/asset_udit/Analysis_6_13_2022.txt\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n        \"fileId\": \"bulk-collections-9_21_2022/Analysis_6_13_2022.txt\"\n      },\n      \"result\": \"COMPLETED\",\n      \"effectiveTransferSpeed\": 7,\n      \"size\": 591\n    }],\n    \"effectiveTrasnsferSpeed\": 669,\n    \"created\": 1611857613881,\n    \"completed\": 1611857755006\n  }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/download/{taskId}": {
      "get": {
        "description": "This service allows you to get the status of a data file download task. The *taskId* parameter is the task identifier returned in the *Data Object Download* REST API response. \n\nThis service returns the download status of each data file in MoDaC.\n1. **CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/dataObject/download/{taskId}' -D header.txt -o output.json -u <Your Email ID>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/dataObject/download/a24b4026-423c-4d27-a824-4c51635f445e -D header.txt -o output.json -u JaneDoe@nih.gov\n  ```\n",
        "summary": "Get the status of a data file download task.",
        "tags": [
          "Get Task Status"
        ],
        "operationId": "dataObjectDownloadStatusByTaskId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "```\n{\n      \"inProgress\": false,\n      \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/Asset_9_18_2022/SRR479079.sra\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"MyDrive\",\n        \"fileContainerName\": \"MyDrive\",\n        \"fileId\": \"DOE/SRR479079.sra\"\n      },\n      \"destinationType\": \"GOOGLE_DRIVE\",\n      \"result\": \"COMPLETED\",\n      \"effectiveTrasnsferSpeed\": 222,\n      \"size\": 378,\n      \"created\": 1606859709852,\n      \"completed\": 1606859711548\n  }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/download/{taskId}": {
      "get": {
        "description": "This service allows you to get the status of a data file list download task or a collection list download task. The *taskId* parameter is the task identifier returned in the *Download Object and Collection List* REST API response. \nThis service returns the download status of each file. For collection list, the service also returns the collection summary information.\n\n1.**CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/download/{taskId}' -D header.txt -o output.json -u <Your Email ID>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/download/be6cefdc-0ea5-4bd6-b84b-1d0b876407db -D header.txt -o output.json -u JaneDoe@nih.gov\n  ```\n",
        "summary": "Get the status of a data file list download task or a collection list download task.",
        "tags": [
          "Get Task Status"
        ],
        "operationId": "dataObjectsOrCollectionsDownloadStatusByTaskId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "\n**Datafile list download task response**\n```\n {\n        \"inProgress\": false,\n        \"destinationLocation\": {\n          \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n          \"fileId\": \"/~/Demo_9_15_2022\"\n        },\n        \"destinationType\": \"GLOBUS\",\n        \"result\": \"COMPLETED\",\n        \"completedItems\": [{\n          \"dataObjectDownloadTaskId\": \"d57927c8-97da-459d-a150-576eb495df76\",\n          \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/SRR479649.sra\",\n          \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n            \"fileId\": \"/~/Demo_9_15_2022/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/SRR479649.sra\"\n          },\n          \"result\": \"COMPLETED\",\n          \"effectiveTransferSpeed\": 6,\n          \"size\": 378\n        }, {\n          \"dataObjectDownloadTaskId\": \"cfa366fe-8cbc-4523-8517-bd9f9311f7b5\",\n          \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/SRR479648a.vdbcache\",\n          \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n            \"fileId\": \"/~//NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/SRR479648a.vdbcache\"\n          },\n          \"result\": \"COMPLETED\",\n          \"effectiveTransferSpeed\": 3,\n          \"size\": 378\n        }, {\n          \"dataObjectDownloadTaskId\": \"506e8021-bd62-44dc-804b-2d1d671a3264\",\n          \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/Analysis_9_18_2022.txt\",\n          \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n            \"fileId\": \"/~/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022/Analysis_9_18_2022.txt\"\n          },\n          \"result\": \"COMPLETED\",\n          \"size\": 8\n        }],\n        \"effectiveTrasnsferSpeed\": 4,\n        \"created\": 1663310485515,\n        \"completed\": 1663310670014\n   }\n```   \n   **Collection list download task response**\n```\n    {\n        \"inProgress\": false,\n        \"destinationLocation\": {\n          \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n          \"fileId\": \"/~/Collection_Download_9_22_2022/\"\n        },\n        \"destinationType\": \"GLOBUS\",\n        \"result\": \"COMPLETED\",\n        \"completedItems\": [{\n          \"dataObjectDownloadTaskId\": \"1b48f48c-3395-4655-8105-07d9fa03253d\",\n          \"path\": \"/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021/Asset_9_21_2022/tc1.model.h5\",\n          \"collectionPath\": \"/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021/Asset_9_21_2022\",\n          \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n            \"fileId\": \"/~/Collection_Download_9_22_2022/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021/Asset_9_21_2022/tc1.model.h5\"\n          },\n          \"result\": \"COMPLETED\",\n          \"effectiveTransferSpeed\": 5153750,\n          \"size\": 619723016\n        }, {\n          \"dataObjectDownloadTaskId\": \"24e2220e-0ff7-464a-8645-a1fb4aae596b\",\n          \"path\": \"/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021/Asset_9_22_2022/y_pred_7ea1d5c6-d0b1-48c1-a6ec-e08188970c2f.csv\",\n          \"collectionPath\": \"/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021_study/Asset_9_22_2022\",\n          \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n            \"fileId\": \"/~/Collection_Download_9_22_2022/NCI_DOE_Archive/Program_3_19_2021/Study_3_19_2021/Asset_9_22_2022/y_pred_7ea1d5c6-d0b1-48c1-a6ec-e08188970c2f.csv\"\n          },\n          \"result\": \"COMPLETED\",\n          \"effectiveTransferSpeed\": 11,\n          \"size\": 409\n        }],\n        \"effectiveTrasnsferSpeed\": 576205,\n        \"created\": 1663962942892,\n        \"completed\": 1663963110033,\n        \"collectionListResultSummary\": [{\n          \"path\": \"/NCI_DOE_Archive/3_19_2021/3_19_2021_study/Asset_9_21_2022\",\n          \"processed\": true,\n          \"result\": \"COMPLETED\",\n          \"completedCount\": 2\n        }, {\n          \"path\": \"/NCI_DOE_Archive/3_19_2021/3_19_2021_study/Asset_9_22_2022\",\n          \"processed\": true,\n          \"result\": \"COMPLETED\",\n          \"completedCount\": 8\n        }]\n}",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "\nAuthentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/models/evaluate/{referenceDatasetPath}": {
      "post": {
        "description": "This service allows you to evaluate one or more models that are deployed. using a reference dataset. A reference dataset is a MoDaC dataset containing an input file and an outcome file. The input.json file provides the paths of the models to be evaluated.. \n\nTo invoke this service, you require a MoDaC user account with upload permission.\n\n   Use the *Get Evaluate Task Status* Rest API to get the evaluation result by providing the task Id returned from this service. \n\n \n\n \n\n1. **CURL COMMAND**\n  ```\n  curl -H Content-Type: application/json -d @<model paths json> -X POST https://modac.cancer.gov/api/models/evaluate/{referenceDatasetPath} -u <Your Email ID>\n  ```\n2.  **ModelPaths.json Example**\n  ```\n     {\n           \"modelPaths\" : [\n           {\n           \"path\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/US_Model_5_6_2022\"\n           },\n           {\n            \"path\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/US_Model_9_6_2022\"\n          }\n        ]\n    }\n  ```\n3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -H Content-Type: application/json -d @ModelPaths.json -X POST https://modac.cancer.gov/api/models/evaluate/NCI_DOE_Archive/Program_demo/Study_9_19_2022/Asset_9_19_2022 -u JohnDoe@nih.gov",
        "tags": [
          "Evaluate Models"
        ],
        "summary": "Perform model evaluation using reference datasets.",
        "operationId": "evaluationUsingPost",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "referenceDatasetPath",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "Dataset",
            "description": "Dataset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDataset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "```\n{\"message\":\"Evaluate task(s) submitted.\",\"taskId\":[\"82769b3d-7a12-4a64-9ab1-3eff51d0dfbe\"]}\n```"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/model/evaluate/{path}": {
      "post": {
        "description": "This service allows you to evaluate a model using a Genomic Data Commons (GDC) manifest file, an\n input dataset file, or one or more reference datasets. \n \n To invoke this service, you require a MoDaC user account with upload permission.\n \n \nThe query parameter *type* is mandatory and can be one of the following:\n  1. **ReferenceDataset**: This requires the *referenceDataset* file option to be provided. This JSON file lists one or more reference dataset paths.  \n  2. **UserInput**: This requires the *inputFile* file option to be provided. This file contains the input dataset.   The *outcomeFile* file option is optional. This file contains the expected outcome. \n  3. **GDCManifest**: This requires the *inputFile* file option to be provided. This file contains a manifest file from GDC. The steps for creating a GDC Manifest file are available at https://docs.gdc.cancer.gov/Encyclopedia/pages/Manifest_File. The *outcomeFile* file option is optional. This file contains the expected outcome. \n   \n  \n  Use the *Get Evaluate Task Status* REST API to get the evaluation result by providing the task Id returned from this service.\n\n**Evaluating model using one or more reference datasets**\n1. **CURL COMMAND**\n  ```\n  curl -k -F \"referenceDataset=@<reference dataset json>;type=application/json\" -X POST https://modac.cancer.gov/api/model/evaluate/{modelPath}?type=ReferenceDataset -u JaneDoe@nih.gov\n  ```\n2.  **ReferenceDataset.json Example**\n  ```\n       {\n          \"referenceDatasetPaths\": [{\n            \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/Asset_9_16_2022\"\n          }, {\n            \"path\": \"/NCI_DOE_Archive/Program_demo/Study_9_19_2022/Asset_9_20_2022\"\n          }]\n        }\n  ```\n3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k -F \"referenceDataset=@ReferenceDataset.json;type=application/json\" -X POST https://modac.cancer.gov/api/model/evaluate/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022?type=ReferenceDataset -u JaneDoe@nih.gov\n  ```\n **Evaluating model using user supplied dataset file** \n\n1. **CURL COMMAND**\n  ```\n  curl -k -F inputFile=@<input dataset file> -F outcomeFile=@<outcome file> -X POST https://modac.cancer.gov/api/model/evaluate/{modelPath}?type=UserInput -u <Your Email ID>\n  ```\n\n2. **EXAMPLE - CURL COMMAND**\n  ```\n   curl -k -F inputFile=@UserInput.txt -F outcomeFile=@OutcomeFile.txt -X POST https://modac.cancer.gov/api/model/evaluate/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022?type=UserInput -u JaneDoe@nih.gov\n   ```\n   **Evaluating model using GDC Manifest file** \n    \n1. **CURL COMMAND**\n  ```\n  curl -k -F inputFile=@<GDC manifest file> -F outcomeFile=@<outcome file> -X POST https://modac.cancer.gov/api/model/evaluate/{modelPath}?type=GDCManifest -u <Your Email ID>\n  ```\n\n2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k -F inputFile=@GDCManifestFile.txt -F outcomeFile=@OutcomeFile.txt -X POST https://modac.cancer.gov/api/model/evaluate/NCI_DOE_Archive/Program_demo/Study_9_19_2022/US_Model_5_6_2022?type=GDCManifest -u JaneDoe@nih.gov\n",
        "tags": [
          "Evaluate Models"
        ],
        "summary": "Perform model evaluation using GDC manifest, input dataset, or reference dataset.",
        "operationId": "evaluationOfDatasetsUsingPost",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "isManifestFile",
            "in": "query",
            "description": "isManifestFile",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "```\n{\"message\":\"Evaluate task(s) submitted.\",\"taskId\":[\"c187fec8-193b-4267-8880-cea77fd96d2c\",\"8920e870-26bd-42b2-ae66-d3a0735cc073\"]}\n```"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/model/evaluate/{taskId}": {
      "get": {
        "description": "This service allows you to get the status of a model evaluation task. The *taskId* parameter is the task identifier returned in the *Evaluate Models* REST API response. \n\nIf the task is completed, the paths of the results file, input file, and outcome file are also returned by this service. These files can be retrieved from MoDaC using the *Download a data file* REST API\n\n\n1. **CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/model/evaluate/{taskId}' -D header.txt -o output.json -u <Your Email ID>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k https://modac.cancer.gov/api/model/evaluate/b25b79c1-c719-4710-b1b9-841e937efe7b -D header.txt -o output.json -u JohnDoe@nih.gov\n  ```\n",
        "summary": "Get the status of a model evaluation task.",
        "tags": [
          "Get Task Status"
        ],
        "operationId": "statusByTaskId",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "```\n  {\n    \"status\": \"Completed\",\n    \"startDate\": \"09/21/2022 09:37:06\",\n    \"completedDate\": \"09/21/2022 09:42:35\",\n    \"resultPath\": \"/NCI_DOE_Archive/3_19_2021/3_19_2021_study/US_Model_5_6_2022/Prediction_b25b79c1-c719-4710-b1b9-841e937efe7b/y_pred_b25b79c1-c719-4710-b1b9-841e937efe7b.csv\",\n    \"inputFile\": \"/NCI_DOE_Archive/3_19_2021/3_19_2021_study/US_Model_5_6_2022/Prediction_b25b79c1-c719-4710-b1b9-841e937efe7b/gdc_manifest_tc1.txt\",\n    \"outcomeFile\": \"/NCI_DOE_Archive/3_19_2021/3_19_2021_study/US_Model_5_6_2022/Prediction_b25b79c1-c719-4710-b1b9-841e937efe7b/actual_result_tc1.csv\"\n  }\n``` ",
            "schema": {
              "$ref": "#/definitions/ModelStatus"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/collection/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific collection including all of its hierarchical metadata. Use the *path* parameter to specify the path to the collection of interest. In the output, the collection and *selfMetadataEntries* elements provide information about the collection you specified, while the *parentMetadataEntries* element provides information about the collection that contains the collection you specified. If you set the *list* parameter to 'true', the subCollections element lists the child collections of this collection and the dataObjects element lists the data objects of this collection. The list parameter is optional and its default is 'false'. \n\n**Query Param**\n*list* – If set to 'true', the API will list the child collections and data objects of this collection. The *subCollections* element lists the child collections and the *dataObjects* element lists the data objects. This is an optional parameter and default is 'false'.\n\n1. **CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/{path}' -D header.txt -o output.json -u <Your Email Id>\n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21?list=true -D header.txt -o output.json -u myemailid@nih.gov\n  ```\n",
        "summary": "Get collection information.",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "CollectionByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "includeAcl",
            "in": "query",
            "description": "includeAcl",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "list",
            "in": "query",
            "description": "list",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcCollectionListDTORes"
            },
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n    {\n          \"collections\": [{\n            \"collection\": {\n              \"collectionId\": 941408,\n              \"collectionName\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21\",\n              \"absolutePath\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21\",\n              \"collectionParentName\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21\",\n              \"collectionOwnerName\": \"ncidoesvct2\",\n              \"collectionOwnerZone\": \"ncifHpcZone\",\n              \"collectionMapId\": \"0\",\n              \"collectionInheritance\": \"1\",\n              \"createdAt\": 1611209713000,\n              \"specColType\": \"NORMAL\",\n              \"dataObjects\": [{\n                \"id\": 941458,\n                \"path\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/results.xlsx\",\n                \"dataSize\": 0\n              }, {\n                \"id\": 945090,\n                \"path\": \"NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rna_data_combat\",\n                \"dataSize\": 0\n              }, {\n                \"id\": 941448,\n                \"path\": \"NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_dna.rtfd.zip\",\n                \"dataSize\": 0\n              }, {\n                \"id\": 941434,\n                \"path\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/demo_3_20_21.txt\",\n                \"dataSize\": 0\n              }]\n            },\n            \"metadataEntries\": {\n              \"selfMetadataEntries\": [{\n                \"attribute\": \"data_id\",\n                \"value\": \"4532we3093\"\n              }, {\n                \"attribute\": \"description\",\n                \"value\": \"DNA test results\"\n              }, {\n                \"attribute\": \"asset_type\",\n                \"value\": \"Dataset\"\n              }, {\n                \"attribute\": \"poc_name\",\n                \"value\": \"Robin Sterling\"\n              }],\n              \"parentMetadataEntries\": [{\n                \"attribute\": \"uuid\",\n                \"value\": \"e73722a3-561a-4507-9b7b-052544ba745e\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"description\",\n                \"value\": \"The cellular level pilot of the Joint Design of Advanced Computing Solutions for Cancer (JDACS4C) program focuses on developing predictive models, both computational and experimental, to improve pre-clinical therapeutic drug screening. It uses advanced computational technologies including machine and deep learning to rapidly develop, test, and validate predictive pre-clinical drug efficacy models. The goal of this pilot is to accelerate the identification of promising new treatment options for precision oncology.\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"study_name\",\n                \"value\": \"Cellular Level Pilot: Predictive Modeling for Pre-Clinical Screening\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"study_identifier\",\n                \"value\": \"JDACS4C_Pilot_1\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"configuration_id\",\n                \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"collection_type\",\n                \"value\": \"Study\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\"\n              }, {\n                \"attribute\": \"program_description\",\n                \"value\": \"The Joint Design of Advanced Computing Solutions for Cancer (JDACS4C) program was created as part of the Cancer Moonshot to accelerate cancer research using emerging exascale computing capabilities. It is a cross-agency collaboration between NCI and the Department of Energy (DOE). Investigators from NCI and the Frederick National Laboratory for Cancer Research work collaboratively with experts in computational, data, and physical sciences from four DOE national laboratories: Argonne, Los Alamos, Lawrence Livermore, and Oak Ridge.\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 3,\n                \"levelLabel\": \"Program\"\n              }, {\n                \"attribute\": \"configuration_id\",\n                \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 3,\n                \"levelLabel\": \"Program\"\n              }]\n            }\n          }]\n        }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "This service allows you to register an empty collection (Program, Study or Asset) if you have a MoDaC user account with upload permission. If this is an existing collection, you can update its metadata.\n\n\nBy default, this service expects the containing collection for the collection you are registering to already exist at the time of registration. However, you can optionally request that this service create the parent and higher-level collections. To do so, set the *createParentCollections* indicator in the json file to 'true', and provide the list of metadata for the parent collections through *parentCollectionsBulkMetadataEntries*. In this case, this service creates the entire collection hierarchy above the registered collection.\n\n1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X PUT https://modac.cancer.gov/api/collection/{path} -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  ```\n  2.  **attributesFile.json Example**\n  ```\n     {\n     \"createParentCollections\": true,\n        \"metadataEntries\": [{\n            \"attribute\": \"study_identifier\",\n            \"value\": \"Study_1\"\n          },\n          {\n            \"attribute\": \"collection_type\",\n            \"value\": \"Study\"\n          }\n        ],\n        \n        \"parentCollectionsBulkMetadataEntries\": {\n          \"defaultCollectionMetadataEntries\": [{\n            \"attribute\": \"collection_type\",\n            \"value\": \"Program\"\n          }]\n        }\n      }\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -H \"Content-Type: application/json\" -d @attributesFile.json -X PUT https://modac.cancer.gov/api/collection/NCI_DOE_Archive/Program_demo/Study_3_21_2020 -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n",
        "summary": "Register an empty collection.",
        "tags": [
          "Upload Data"
        ],
        "operationId": "CollectionByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "collectionRegistration",
            "description": "collectionRegistration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCollectionRegistrationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/collection/query": {
      "post": {
        "description": "This service allows you to perform a query for a collection. To do a collection query, first we define the simple query, then we show how to combine multiple simple queries into a compound query.\n\n\n  Simple query is the basic building block of the compound query. It consists of :\n  \n  • *attribute* - This is the metadata attribute name which you want to query.\n    \n  • *value* - This is the metadata attribute's value which you want to query.\n    \n  • *operator* - When searching for a collection, you could limit your search to a level using comparison operators. Supported operators are: EQUAL, NOT_EQUAL, LIKE, NUM_LESS_THAN, NUM_LESS_OR_EQUAL, NUM_GREATER_OR_EQUAL, NUM_GREATER_THAN.  \n    \n  • *levelFilter* - This is an optional attribute. If levelFilter attribute is used, search will match the metadata found at the specified *level*. If this filter is not provided, the query will match metadata found at any level of the path.\n    \n  • *attributeMatch* - This is an optional attribute. If it is set to *ANY*, then the query will apply to any metadata attribute, and ‘attribute’ of the query is expected to be omitted. If ‘attributeMatch’ is omitted, or set to EXACT, then the search will be limited to the provided metadata attribute.\n\n    \n   Multiple simple queries can be combined with a join operator (\"AND\", \"OR\") to create a list of queries. Multiple lists can be further combined to create a combined query. \n      \n\n  Example:\n          \n          {\n             \"compoundQuery\": {\n               \"operator\": \"AND\",\n               \"queries\": [{\n                   \"attribute\": \"experiment\",\n                   \"value\": \"H1_M2_update_10M\",\n                   \"operator\": \"EQUAL\",\n                   \"levelFilter\": {\n                     \"level\": 1,\n                     \"operator\": \"NOT_EQUAL\"\n                   }\n                 },\n                 {\n                   \"attribute\": \"run_name\",\n                   \"value\": \"run_02_20_2020\",\n                   \"operator\": \"LIKE\"\n                 }\n               ]\n             },\n             \"detailedResponse\": true,\n             \"page\": 1,\n             \"totalCount\": false\n          }\n\n  \n  **detailedResponse**: By default, search lists returns only paths of matched resulted collections. If “detailedResponse=true”, collections are returned with metadata.\n  **page**: Ask for a specific page of results. By default, the query will return the first 100 results in page 1, the second 100 in page 2, etc. If omitted, page 1 is fetched. \n  **totalCount**: If set to ‘true’, the total count of collections matching the query regardless of the query limit and page will be returned. By default if omitted, this is set to 'false' and no total count will be returned.\n  \n  \n  \n  \n  \n  \n\n  1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/collection/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n  \n  ```\n  2.  **attributesFile.json Example**\n  ```\n       {\n          \"compoundQuery\": {\n          \"operator\": \"AND\",\n          \"queries\": [{\n          \"attribute\": \"access_group\",\n          \"value\": \"public\",\n          \"operator\": \"LIKE\"\n          },\n             {\n            \"attribute\": \"collection_type\",\n          \"value\": \"Asset\",\n         \"operator\": \"LIKE\"\n          }]},\n              \"detailedResponse\": true,\n            \"page\": 1,\n            \"pageSize\": 100,\n            \"totalCount\": true,\n  \n        }\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/collection/query -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ``` \n",
        "summary": "Find collection by metadata query.",
        "tags": [
          "Search Data"
        ],
        "operationId": "CollectionQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "compoundMetadataQuery",
            "description": "compoundMetadataQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCompoundMetadataQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcCollectionListDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n             {\n                \"collections\": [{\n                  \"collection\": {\n                    \"collectionId\": 936753,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"collectionParentName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1\",\n                    \"collectionOwnerName\": \"ncidoesvct2\",\n                    \"collectionOwnerZone\": \"ncifHpcZone\",\n                    \"collectionMapId\": \"0\",\n                    \"collectionInheritance\": \"1\",\n                    \"comments\": null,\n                    \"info1\": null,\n                    \"info2\": null,\n                    \"createdAt\": \"2020-09-24T16:10:22.000+00:00\",\n                    \"specColType\": null,\n                    \"subCollections\": [],\n                    \"dataObjects\": []\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"configuration_id\",\n                      \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"poc_email\",\n                      \"value\": \"sehgalu2a@nih.gov\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"access_group\",\n                      \"value\": \"public\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"permission\": null\n                }],\n                \"collectionPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 71\n              }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/{path}/generateDownloadRequestURL": {
      "post": {
        "description": "\nThis service allows you to generate a *download request URL* that can then be used to download the data file directly from MoDaC using wget or other commands. \n \n\n\n 1. **CURL COMMAND**\n    ```\n    curl -k -X POST https://modac.cancer.gov/api/dataObject/{path}/generateDownloadRequestURL -u <Your Email Id>\n    ```\n2. **EXAMPLE - CURL COMMAND**\n    ```\n    curl -k -X POST https://modac.cancer.gov/api/dataObject/NCI_DOE_Archive/ATOM/Neurocrine_H1_Demonstration/H1_M2_update_10nM/H1_M2_10nM_update_20210308.csv/generateDownloadRequestURL -u us39@nih.gov\n    \n   \n    DownloadRequestURL Response Example:\n    \n   {\"downloadRequestURL\":\"http://s3-nci-north.ha.nci.nih.gov/dme-nci-doe-prod-cld/NCI_DOE/NCI_DOE_Archive/ATOM/Neurocrine_H1_Demonstration/H1_M2_update_10nM/H1_M2_10nM_update_20210308.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210324T183709Z&X-Amz-SignedHeaders=host&X-Amz-Expires=604800&X-Amz-Credential=113504398e2081835f43%2F20210324%2Fnci-north%2Fs3%2Faws4_request&X-Amz-Signature=449f448f26758fb8f830603c7a43963550cb802292adcb90317cadff14739526\"}\n    ``` \n    \n3. **WGET COMMAND**\n    ```\n    wget -O OutputFileName “DownloadRequestURL”\n    ``` \n \n \n4. **EXAMPLE - WGET COMMAND**\n    ```\n   wget -O OutputFileName “http://s3-nci-north.ha.nci.nih.gov/dme-nci-doe-prod-cld/NCI_DOE/NCI_DOE_Archive/ATOM/Neurocrine_H1_Demonstration/H1_M2_update_10nM/H1_M2_10nM_update_20210308.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210324T183709Z&X-Amz-SignedHeaders=host&X-Amz-Expires=604800&X-Amz-Credential=113504398e2081835f43%2F20210324%2Fnci-north%2Fs3%2Faws4_request&X-Amz-Signature=449f448f26758fb8f830603c7a43963550cb802292adcb90317cadff14739526”\n    ``` \n",
        "summary": "Generate a download request URL.",
        "tags": [
          "Download Data"
        ],
        "operationId": "DataObjectGenerateDownloadRequestURLByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDownloadResponseDTO"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n\n    {\n    \"downloadRequestURL\": \"http://s3-nci-north.ha.nci.nih.gov/MoDaC-prod-bucket/NCI_DOE_Archive/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/File1.fastq?X-Amz-Algorithm=AWS4-HMAC-SH-Signature=88b826fc411db2838f3ef1244ace1786ce5dcc7d14ffb78e070f6d131ec0a4e1\"\n    }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/query": {
      "post": {
        "description": "This service allows you to perform a query for a data file. You can perform a simple query, or you can combine multiple simple queries into a compound query.\n\nSimple query is the basic building block of the compound query. It consists of :\n  \n  • *attribute* - This is the metadata attribute name which you want to query.\n    \n  • *value* - This is the metadata attribute's value which you want to query.\n    \n  • *operator* - When searching for a collection, you could limit your search to a level using comparison operators. Supported operators are: EQUAL, NOT_EQUAL, LIKE, NUM_LESS_THAN, NUM_LESS_OR_EQUAL, NUM_GREATER_OR_EQUAL, NUM_GREATER_THAN.  \n    \n  • *levelFilter* - This is an optional attribute. If levelFilter attribute is used, search will match the metadata found at the specified *level*. If this filter is not provided, the query will match metadata found at any level of the path.\n    \n  • *attributeMatch* - This is an optional attribute. If it is set to *ANY*, then the query will apply to any metadata attribute, and ‘attribute’ of the query is expected to be omitted. If ‘attributeMatch’ is omitted, or set to EXACT, then the search will be limited to the provided metadata attribute.\n\n    \n   Multiple simple queries can be combined with a join operator (\"AND\", \"OR\") to create a list of queries. Multiple lists can be further combined to create a combined query.  \n\n  Example:\n          \n          {\n             \"compoundQuery\": {\n               \"operator\": \"AND\",\n               \"queries\": [{\n                   \"attribute\": \"experiment\",\n                   \"value\": \"H1_M2_update_10M\",\n                   \"operator\": \"EQUAL\",\n                   \"levelFilter\": {\n                     \"level\": 1,\n                     \"operator\": \"NOT_EQUAL\"\n                   }\n                 },\n                 {\n                   \"attribute\": \"run_name\",\n                   \"value\": \"run_02_20_2020\",\n                   \"operator\": \"LIKE\"\n                 }\n               ]\n             },\n             \"detailedResponse\": true,\n             \"page\": 1,\n             \"totalCount\": false\n          }\n\n  \n  **detailedResponse**: By default, search lists returns only paths of matched resulted data files. If “detailedResponse=true”, data objects are returned with their metadata.\n  **page**: Ask for a specific page of results. By default, the query will return the first 100 results in page 1, the second 100 in page 2, etc. If omitted, page 1 is fetched. \n  **totalCount**: If set to ‘true’, the total count of data files matching the query regardless of the query limit and page will be returned. By default if omitted, this is set to 'false' and no total count will be returned.\n\n\n1. **CURL COMMAND**\n```\ncurl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/dataobject/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n```\n2.  **attributesFile.json Example**\n```\n    {\n      \"compoundQuery\": {\n      \"operator\": \"AND\",\n      \"queries\": [{\n          \"attribute\": \"asset_identifier\",\n          \"value\": \"H1_Selectivity_Asset\",\n          \"operator\": \"LIKE\"\n        },\n        {\n          \"attribute\": \"data_transfer_status\",\n          \"value\": \"ARCHIVED\",\n          \"operator\": \"LIKE\"\n                  }\n                ]\n              },\n          \"page\": 1,\n          \"totalCount\": true\n    }\n```\n3. **EXAMPLE - CURL COMMAND**\n```\ncurl -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/dataObject/query -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n```\n\n",
        "summary": "Find data file by compound metadata query.",
        "tags": [
          "Search Data"
        ],
        "operationId": "DataObjectQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "compoundMetadataQuery",
            "description": "compoundMetadataQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCompoundMetadataQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectListDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**: \n\n            {\n                \"dataObjects\": [{\n                  \"dataObject\": {\n                    \"id\": 936762,\n                    \"collectionId\": 936753,\n                    \"dataName\": null,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataSize\": 0,\n                    \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataOwnerName\": \"ncif-hpcdm-svc\",\n                    \"createdAt\": \"2020-09-24T16:12:45.000+00:00\"\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"uuid\",\n                      \"value\": \"5a9b2128-88e2-4c35-8741-b7ba429d1f40\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by\",\n                      \"value\": \"ncidoesvct2\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by_name\",\n                      \"value\": \"DOE DOE\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"data_transfer_started\",\n                      \"value\": \"09-24-2020 12:13:12\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"archive_file_id\",\n                      \"value\": \"NCI_DOE_Archive/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"metadata_updated\",\n                      \"value\": \"09-24-2020 12:10:26\",\n                      \"unit\": null,\n                      \"level\": 2,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"percentComplete\": null,\n                  \"permission\": null\n                }],\n                \"dataObjectPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 70",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/collection/{path}/download": {
      "post": {
        "description": "This service allows you to to transfer a collection from MoDaC to one of the following possible destinations:\n\n• Globus endpoint (asynchronous download)\n\n• AWS S3 (asynchronous download)\n\n The *path* parameter represents the logical path of the collection registered with MoDaC. The *attributesFile.json* must have the destination information as shown in the *attributesFile.json* example below. \n\n\n\nA MoDaC user account is a pre-requisite for downloading data from MoDaC.  \n\nFor downloading to a Globus endpoint, if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination file exists, this service overwrites the destination file. If you omit this indicator and the destination file exists, then this service rejects the transfer request. \n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/collection/{path}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n ```\n 2.  **attributesFile.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        { \n          \"globusDownloadDestination\": {\n          \"destinationOverwrite\" : true,\n            \"destinationLocation\": {\n              \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-2\",\n              \"fileId\": \"demo-collection-03_20_21\"\n            }\n          }\n        }\n        \n  b. To request a download to AWS S3\n        { \n          \"s3DownloadDestination\": {\n            \"destinationLocation\": {\n              \"fileContainerId\": \"demo-NCI-1\",\n              \"fileId\": \"demo-collection-03_20_21\"\n            },\n            \"account\" : {\n              \"accessKey\" : \"***\",\n              \"secretKey\" : \"***\",\n              \"region\" :\"us-east-2\"\n            }\n          }\n        }\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/collection/NCI_DOE_Archive/NCI_DOE_Archive/Program_3_7_21/Study_3_7_21/Asset_Data_3_7_21/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n ```\n",
        "summary": "Download a collection.",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2CollectionDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200",
            "schema": {
              "$ref": "#/definitions/HpcCollectionDownloadResponseDTO"
            },
            "headers": {}
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific data file including all of its hierarchical metadata. Use the *path* parameter to specify the path to the collection of interest. In the output, the *dataObject* and *selfMetadataEntries* elements provide information about the file you specified, while the *parentMetadataEntries* element provides information about the collection that contains the file you specified.\n\n1. **CURL COMMAND**\n\n  ```\n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/{path}' -D header.txt -o output.json -u <Your Email Id>\n  ```\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat' -D header.txt -o output.json -u us39@nih.gov\n  ```\n  3. **EXAMPLE - CURL COMMAND (excludeParentMetaata=true)**\n  ```\n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat?excludeParentMetadata=true' -D header.txt -o output.json -u us39@nih.gov\n  ```\n",
        "summary": "Get data file information.",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "path",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "includeAcl",
            "in": "query",
            "description": "includeAcl",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "excludeParentMetadata",
            "in": "query",
            "description": "excludeParentMetadata",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n    {\n            \"dataObject\": {\n              \"id\": 936770,\n              \"collectionId\": 936753,\n              \"collectionName\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21\",\n              \"absolutePath\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat\",\n              \"dataSize\": 0,\n              \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat\",\n              \"dataOwnerName\": \"ncif-hpcdm-svc\",\n              \"createdAt\": 1600963994000\n            },\n            \"metadataEntries\": {\n              \"selfMetadataEntries\": {\n                \"userMetadataEntries\": [{\n                  \"attribute\": \"file_description\",\n                  \"value\": \"The gene expression datasets for cancer cell lines, generated using RNA-seq, were collected from the following sources: NCI-60, CCLE, and GDSC.\"\n                }],\n                \"systemMetadataEntries\": [{\n                  \"attribute\": \"data_transfer_status\",\n                  \"value\": \"ARCHIVED\"\n                }, {\n                  \"attribute\": \"source_file_container_id\",\n                  \"value\": \"9ccf3f08-accc-11ea-bee8-0e716405a293\"\n                }, {\n                  \"attribute\": \"data_transfer_completed\",\n                  \"value\": \"09-24-2020 12:14:41\"\n                }, {\n                  \"attribute\": \"data_transfer_method\",\n                  \"value\": \"GLOBUS\"\n                }, {\n                  \"attribute\": \"source_file_size\",\n                  \"value\": \"83444572\"\n                }, {\n                  \"attribute\": \"checksum\",\n                  \"value\": \"4d48204327e689149c096e7636b03ac1-2\"\n                }, {\n                  \"attribute\": \"source_file_id\",\n                  \"value\": \"/Datasets/combined_rnaseq_data_lincs1000_combat\"\n                }, {\n                  \"attribute\": \"configuration_id\",\n                  \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\"\n                }, {\n                  \"attribute\": \"uuid\",\n                  \"value\": \"6a0717e9-38a5-4850-955b-781bd658ed0c\"\n                }, {\n                  \"attribute\": \"data_transfer_started\",\n                  \"value\": \"09-24-2020 12:13:46\"\n                }, {\n                  \"attribute\": \"registration_completion_event\",\n                  \"value\": \"false\"\n                }, {\n                  \"attribute\": \"registered_by\",\n                  \"value\": \"ncidoesvct2\"\n                }, {\n                  \"attribute\": \"s3_archive_configuration_id\",\n                  \"value\": \"f812652a-9101-46ad-9787-a8831e034ef6\"\n                }, {\n                  \"attribute\": \"metadata_updated\",\n                  \"value\": \"09-24-2020 13:00:07\"\n                }, {\n                  \"attribute\": \"data_transfer_type\",\n                  \"value\": \"S_3\"\n                }, {\n                  \"attribute\": \"registered_by_name\",\n                  \"value\": \"Robin Sterling\"\n                }, {\n                  \"attribute\": \"data_transfer_request_id\",\n                  \"value\": \"82261466\"\n                }]\n              },\n              \"parentMetadataEntries\": [{\n                \"attribute\": \"asset_type\",\n                \"value\": \"Dataset\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"configuration_id\",\n                \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"asset_name\",\n                \"value\": \"Cancer Gene Expression Data\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"metadata_updated\",\n                \"value\": \"03-05-2021 19:04:54\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"institute\",\n                \"value\": \"Argonne National Laboratory\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"description\",\n                \"value\": \"Gene expression data of cancer cell lines, NCI PDX models and GDC patient samples\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"collection_type\",\n                \"value\": \"Asset\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"asset_identifier\",\n                \"value\": \"anl_cancer_gene_expression_data\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"access_group\",\n                \"value\": \"public\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Asset\"\n              }, {\n                \"attribute\": \"configuration_id\",\n                \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 4,\n                \"levelLabel\": \"Program\"\n              }]\n            }\n          }\n    \n  **Output (excludeParentMetadata=true)**:\n\n    {\n        \"dataObject\": {\n        \"id\": 936770,\n        \"collectionId\": 936753,\n        \"collectionName\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21\",\n        \"absolutePath\": \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat\",\n        \"dataSize\": 0,\n        \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_3_1_21/combined_rnaseq_data_lincs1000_combat\",\n        \"dataOwnerName\": \"ncif-hpcdm-svc\",\n        \"createdAt\": 1600963994000\n      },\n      \"metadataEntries\": {\n        \"selfMetadataEntries\": {\n          \"systemMetadataEntries\": [{\n            \"attribute\": \"data_transfer_status\",\n            \"value\": \"ARCHIVED\"\n          }, {\n            \"attribute\": \"source_file_container_id\",\n            \"value\": \"9ccf3f08-accc-11ea-bee8-0e716405a293\"\n          }, {\n            \"attribute\": \"data_transfer_completed\",\n            \"value\": \"09-24-2020 12:14:41\"\n          }, {\n            \"attribute\": \"data_transfer_method\",\n            \"value\": \"GLOBUS\"\n          }, {\n            \"attribute\": \"source_file_size\",\n            \"value\": \"83444572\"\n          }, {\n            \"attribute\": \"checksum\",\n            \"value\": \"4d48204327e689149c096e7636b03ac1-2\"\n          }, {\n            \"attribute\": \"source_file_id\",\n            \"value\": \"/Datasets/combined_rnaseq_data_lincs1000_combat\"\n          }, {\n            \"attribute\": \"configuration_id\",\n            \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\"\n          }, {\n            \"attribute\": \"uuid\",\n            \"value\": \"6a0717e9-38a5-4850-955b-781bd658ed0c\"\n          }, {\n            \"attribute\": \"data_transfer_started\",\n            \"value\": \"09-24-2020 12:13:46\"\n          }, {\n            \"attribute\": \"registration_completion_event\",\n            \"value\": \"false\"\n          }, {\n            \"attribute\": \"registered_by\",\n            \"value\": \"ncidoesvct2\"\n          }, {\n            \"attribute\": \"s3_archive_configuration_id\",\n            \"value\": \"f812652a-9101-46ad-9787-a8831e034ef6\"\n          }, {\n            \"attribute\": \"metadata_updated\",\n            \"value\": \"09-24-2020 13:00:07\"\n          }, {\n            \"attribute\": \"data_transfer_type\",\n            \"value\": \"S_3\"\n          }, {\n            \"attribute\": \"registered_by_name\",\n            \"value\": \"Robin Sterling\"\n          }, {\n            \"attribute\": \"data_transfer_request_id\",\n            \"value\": \"82261466\"\n          }]\n        }\n      }\n    \n    }\n                                                       ",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "\n\nThis service allows you to register a data file from one of the following locations:\n\n   • Local file system (synchronous upload)\n   \n   • Globus endpoint (asynchronous upload)\n   \n   • AWS S3 (asynchronous upload)\n\nFor obtaining upload permission or permission to modify the metadata of a file, please contact modac-support@nih.gov\n\n Additionally, for registering a data file from a Globus endpoint, MODAC-PROD-App-Accts-Pool-NCI_DOE group must be added to your Globus endoint. For details, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n 1. **CURL COMMAND**\n  ```\n  A. Synchronous upload\n  \n curl -k -F \"dataObjectRegistration=@<attributesFile.json;type=application/json\" -F \"dataObject=@<data file path>\" -X PUT https://modac.cancer.gov/api/v2/dataObject/{collection path}/{datafile name} -u <Your Email ID>\n\n B. Asynchronous upload\n\n curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\" -X PUT https://modac.cancer.gov/api/v2/dataObject/{collection path}/{data file name} -D header.txt -o output.json -u <Your Email ID>\n  ```\n  2.  **attributesFile.json Example**\n  \n  ```\n   A. Register from local file system (Synchronous upload)\n         { \n           \"metadataEntries\": [\n             {\n               \"attribute\": \"description\",\n               \"value\": \"Drug moa information\"\n             },\n             {\n               \"attribute\": \"object_name\",\n               \"value\": \"Asset_Data_3_1_21/anl_drug_moa_information.xlsx\"\n             }\n           ]\n         }\n       \n   B. Register from Globus (Asynchronous upload)\n   \n          {\n             \"globusUploadSource\": {\n               \"sourceLocation\": {\n                 \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                 \"fileId\": \"DNA_12918_results.txt\"\n               }\n             },\n             \"metadataEntries\": [{\n               \"attribute\": \"description\",\n               \"value\": \"Drug moa information\"\n             }, {\n               \"attribute\": \"object_name\",\n               \"value\": \"Asset_Data_3_1_21/anl_drug_moa_information.xlsx\"\n             }\n             ]\n           }\n         \n   C. Register from S3 (Asynchronous upload)\n           {\n               \"s3UploadSource\": {\n                 \"sourceLocation\": {\n                   \"fileContainerId\": \"s3-bucket-name\",\n                   \"fileId\": \"s3-object-key\"\n                 },\n                 \"account\" : {\n                   \"accessKey\" : \"aws-access-key\",\n                   \"secretKey\" : \"aws-secret-key\",\n                   \"region\" :\"aws-region\"\n                 }\n               },\n               \"metadataEntries\": [\n                 {\n                   \"attribute\": \"description\",\n                   \"value\": \"Drug MoA information\"\n                 }, \n                 {\n                   \"attribute\": \"object_name\",\n                   \"value\": \"Asset_Data_3_1_21/anl_drug_moa_information.xlsx\"\n                 }\n               ]\n             }\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  \n  ```\n  A. Synchronous upload\n  \n  curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\" -F \"dataObject=@anl_drug_moa_information.xlsx\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21/anl_drug_moa_information.xlsx -u us39@nih.gov\n  \n  A. Aysynchronous upload\n  \n  curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NNCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21/anl_drug_moa_information.xlsx -D header.txt -o output.json -u us39@nih.gov\n  ```",
        "summary": "Register data file.",
        "tags": [
          "Upload Data"
        ],
        "operationId": "DataObjectByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "dataObjectRegistration",
            "description": "dataObjectRegistration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDataObjectRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectRes"
            },
            "description": "HTTP/1.1 201 Created",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}/download/": {
      "post": {
        "description": "\nThis service allows you to transfer a data file from MoDaC to one of the following possible destinations: \n \n \n\n• Local file system (synchronous download) \n\n• Globus endpoint (asynchronous download) \n\n• AWS S3 (asynchronous download) \n\n\n The *path* parameter represents the logical path of the data file registered with MoDaC. When downloading files asynchronously (to a Globus endpoint or to an S3 bucket), the attributesFile.json must have the destination information as shown in the *attributesFile.json* example above. \n\n\n\nA MoDaC user account is a pre-requisite for downloading data from MoDaC.  \n\nFor downloading to a Globus endpoint. if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination file exists, this service overwrites the destination file. If you omit this indicator and the destination file exists, then this service rejects the transfer request. \n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n\n  1. **CURL COMMAND**\n   ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/dataObject/{path}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  ``` \n  \n  2.  **JSON FILE EXAMPLES**\n  ``` \n  a. To request download to your file system\n                \n        { \n        }\n  \n  b. To request a download to a Globus endpoint\n  \n      {\n        \"globusDownloadDestination\": {\n          \"destinationLocation\": {\n          \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-22000b9923ef\",\n            \"fileId\": \"demo-file-3-20-21\"\n          },\n       \"destinationOverwrite\" : true,\n        }\n      }\n     \n      \n c.   To request a download to an S3 bucket\n \n        {\n            \"s3DownloadDestination\": {\n              \"destinationLocation\": {\n                \"fileContainerId\": \"demo-NCI-1\",\n                \"fileId\": \"demo-file-3-20-21\"\n              },\n              \"account\" : {\n                \"accessKey\" : \"***\",\n                \"secretKey\" : \"***\",\n                \"region\" :\"us-east-1\",\n              },\n          \"destinationURL\" : “https://...”\n            }\n        }\n  ```\n  3. **EXAMPLE - CURL COMMAND to download a file to a Globus endpoint**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n  \n  \n  4. **EXAMPLE - CURL COMMAND to download a file to an S3 bucket**\n  \n  \n  ```\n  curl -k -H \"Content-Type: application/json\" -d @aattributesFile.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n  \n  \n  \n  5.  **EXAMPLE - CURL COMMAND to download a file to your file system**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header.txt -o output.xlsx -u us39@nih.gov\n  ```\n",
        "summary": "Download a data file.",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2DataObjectDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 ",
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDownloadResponseDTO"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/download": {
      "post": {
        "description": "This service allows you to transfer a list of collections or a list of data objects from MoDaC to one of the following possible destinations:\n\n• Globus endpoint (asynchronous download)\n\n• AWS S3 (asynchronous download)\n\n The caller provides a list of collection paths or data object paths, and destination information for their Globus endpoint or S3 bucket where they are looking to download the data to.  The *attributesFile.json* must have the destination information as shown in the *attributesFile.json* example above. \n \n \n\n\nA MoDaC user account is a pre-requisite for downloading data from MoDaC. \n\nFor downloading to a Globus endpoint, if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination collection exists, this service overwrites the destination collection. If you omit this indicator and the destination collection exists, then this service rejects the transfer request.\n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\nAn optional *appendPathToDownloadDestination* indicator can be provided. If set to 'true', the entire object path will be used when files are created in the download destination, otherwise, just the file name will be used. By default this indicator is set to 'true'.\n\n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n \n ```\n 2.  **attributesFile.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        {\n             \"collectionPaths\" : [\n         \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21\",\n         \"/NCI_DOE_Archive/Program_3_7_21/Study_3_7_21/Asset_Data_3_7_21\"\n        ],\n        \"globusDownloadDestination\": {\n            \"destinationOverwrite\" : true,\n            \"destinationLocation\": {\n            \"fileContainerId\": \"16572124-19cb-11e9-934d-0f4\",\n            \"fileId\": \"demo-collection-3_20_21\"\n        }\n        }\n        }\n        \n  b. To request a download to AWS S3\n        {\n          \"collectionPaths\": [\n         \"/NCI_DOE_Archive/Program_3_1_21/Study_3_1_21/Asset_Data_3_1_21\",\n         \"/NCI_DOE_Archive/Program_3_7_21/Study_3_7_21/Asset_Data_3_7_21\"\n          ],\n          \"s3DownloadDestination\": {\n          \"destinationLocation\": {\n            \"fileContainerId\": \"DOE-bucket\",\n            \"fileId\": \"demo-collection-3_20_21\"\n          },\n          \"account\": {\n            \"accessKey\": \"*****\",\n            \"secretKey\": \"*****\",\n            \"region\": \"us-east-2\"\n          }\n        },\n        \"appendPathToDownloadDestination\": true\n      }\n\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n ```\n",
        "summary": "Download objects and collections.",
        "tags": [
          "Download Data"
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 \n\n**Output**\n\n    {\n      \"taskId\": \"892b11d1-61a5-45ea-ad29-126d733b62da\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"1657124-19cb-11e9-934d-0e69f4\",\n        \"fileId\": \"collection_3_10_2021\"\n      }\n    }",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectDownloadResponseDTO"
            }
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/registration": {
      "put": {
        "description": "\nThis service allows users to bulk register several files or collections in a single request from the following locations: \n\n• Globus endpoint \n\n• AWS S3 bucket\n\nThere are multiple ways to bulk register data on MoDaC:\n\n1. To register a collection which consists of one or more files, use the directory scan registration example from below to prepare the attributesFile.json. \n\n2. To register one or more files to an existing collection, use the bulk data objects registeration example from below to prepare the attributesFile.json.\n\nNote: The two methods shared above can also be combined in a single request. \n\n\nThe user can provide a *dryRun* indicator.  If the *dryRun* is set to 'true', the API doesn’t perform the file registrations, but instead returns a list of registration requests.\n\nThe *directoryScanRegistrationItems* holds the Globus endpoint or AWS S3 bucket information of the directory to be registered. \n\nThe *globusScanDirectory* specifies the Globus endpoint to upload from. \n\nThe *s3ScanDirectory* specifies the AWS S3 endpoint to upload from.\n\n\n  1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X PUT https://modac.cancer.gov/api/v2/registration -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  \n  ```\n  2.  **Globus - attributesFile.json Examples**\n  \n    (a) Globus directory scan registration example:\n    \n      {\n          \"dryRun\":false,\n          \"directoryScanRegistrationItems\":[\n              {\n                  \"basePath\":\"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demonstration\",\n                  \"globusScanDirectory\":{\n                      \"directoryLocation\":{\n                          \"fileContainerId\":\"13789bd2-88af-11ea-bf84-0e6cccbb0103\",\n                          \"fileId\":\"Asset_H1_M1_update_MnM\"\n                      }\n                  },\n                  \"bulkMetadataEntries\":{\n                      \"pathsMetadataEntries\":[\n                          {\n                              \"path\":\"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM\",\n                              \"pathMetadataEntries\":[\n                                 {\n                                      \"attribute\":\"collection_type\",\n                                      \"value\":\"Asset\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_identifier\",\n                                      \"value\":\"H1_M1_update_MnM\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_name\",\n                                      \"value\":\"H1_M2\"\n                                  },\n                                  {\n                                      \"attribute\":\"description\",\n                                      \"value\":\" Demo data of Accelerating Therapeutics for Opportunities in Medicine (ATOM)\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_type\",\n                                      \"value\":\"Dataset\"\n                                  }\n                      ]\n                    }\n                  ]\n                }\n              }\n            ]\n        }\n    \n    (b) Globus bulk data objects registration example \n    {\n        \"dryRun\": false,\n        \"dataObjectRegistrationItems\": [{\n            \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM/DNA_12918_results.xlsx\",\n            \"globusUploadSource\": {\n              \"sourceLocation\": {\n                \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                \"fileId\": \"DNA_12918_results.xlsx\"\n              }\n            },\n            \"dataObjectMetadataEntries\": [{\n              \"attribute\": \"file_description\",\n              \"value\": \"DNA Results from 12-9-2018\"\n            }]\n          },\n          {\n                \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM/DNA_5_9_21_results.xlsx\",\n            \"globusUploadSource\": {\n              \"sourceLocation\": {\n                \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                \"fileId\": \"DNA_5_9_21_results.xlsx\"\n              }\n            },\n            \"dataObjectMetadataEntries\": [{\n              \"attribute\": \"file_description\",\n              \"value\": \"DNA results from 5-9-2021\"\n            }]\n          }\n        ]\n      }\n      \n    (c) Globus directory scan and bulk data objects registration example\n    \n        {\n          \"dryRun\": false,\n          \"directoryScanRegistrationItems\": [{\n            \"basePath\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demonstration\",\n            \"globusScanDirectory\": {\n              \"directoryLocation\": {\n                \"fileContainerId\": \"13789bd2-88af-11ea-bf84-0e6cccbb0103\",\n                \"fileId\": \"Asset_H1_M1_update_MnM\"\n              }\n            },\n            \"bulkMetadataEntries\": {\n              \"pathsMetadataEntries\": [{\n                \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM\",\n                \"pathMetadataEntries\": [{\n                    \"attribute\": \"collection_type\",\n                    \"value\": \"Asset\"\n                  },\n                  {\n                    \"attribute\": \"asset_identifier\",\n                    \"value\": \"H1_M1_update_MnM\"\n                  },\n                  {\n                    \"attribute\": \"asset_name\",\n                    \"value\": \"H1_M2\"\n                  },\n                  {\n                    \"attribute\": \"description\",\n                    \"value\": \" Demo data of Accelerating Therapeutics for Opportunities in Medicine (ATOM)\"\n                  },\n                  {\n                    \"attribute\": \"asset_type\",\n                    \"value\": \"Dataset\"\n                  }\n                ]\n              }]\n            }\n          }],\n          \"dataObjectRegistrationItems\": [{\n              \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M7/combined_data_combat_5_8_21.csv\",\n              \"globusUploadSource\": {\n                \"sourceLocation\": {\n                  \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                  \"fileId\": \"combined_data_combat_5_8_21.csv\"\n                }\n              },\n              \"dataObjectMetadataEntries\": [{\n                \"attribute\": \"file_description\",\n                \"value\": \"Combined results from 5-8-2021\"\n              }]\n            },\n            {\n              \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M7/combined_data_combat_5_9_21.csv\",\n              \"globusUploadSource\": {\n                \"sourceLocation\": {\n                  \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                  \"fileId\": \"combined_data_combat_5_9_21.csv\"\n                }\n              },\n              \"dataObjectMetadataEntries\": [{\n                \"attribute\": \"file_description\",\n                \"value\": \"Combined results from 5-9-2021\"\n              }]\n            }\n          ]\n        }\n    \n\n  \n  3. **AWS S3 - attributesFile.json Examples**\n  \n  \n     (a) AWS S3 directory scan registration example:\n    \n      {\n          \"dryRun\":false,\n          \"directoryScanRegistrationItems\":[\n              {\n                  \"basePath\":\"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demonstration\",\n                  \"s3ScanDirectory\":{\n                      \"directoryLocation\":{\n                          \"fileContainerId\":\"13789bd2-88af-11ea-bf84-0e6cccbb0103\",\n                          \"fileId\":\"Asset_H1_M1_update_MnM\"\n               },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n\n                  \"bulkMetadataEntries\":{\n                      \"pathsMetadataEntries\":[\n                          {\n                              \"path\":\"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM\",\n                              \"pathMetadataEntries\":[\n                                 {\n                                      \"attribute\":\"collection_type\",\n                                      \"value\":\"Asset\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_identifier\",\n                                      \"value\":\"H1_M1_update_MnM\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_name\",\n                                      \"value\":\"H1_M2\"\n                                  },\n                                  {\n                                      \"attribute\":\"description\",\n                                      \"value\":\" Demo data of Accelerating Therapeutics for Opportunities in Medicine (ATOM)\"\n                                  },\n                                  {\n                                      \"attribute\":\"asset_type\",\n                                      \"value\":\"Dataset\"\n                                  }\n                      ]\n                    }\n                  ]\n                }\n              }\n            ]\n        }\n    \n    (b) AWS S3 bulk data objects registration example \n    {\n        \"dryRun\": false,\n        \"dataObjectRegistrationItems\": [{\n            \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM/DNA_12918_results.xlsx\",\n            \"s3UploadSource\": {\n              \"sourceLocation\": {\n                \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                \"fileId\": \"DNA_12918_results.xlsx\"\n            },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n            \"dataObjectMetadataEntries\": [{\n              \"attribute\": \"file_description\",\n              \"value\": \"DNA Results from 12-9-2018\"\n            }]\n          },\n          {\n                \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM/DNA_5_9_21_results.xlsx\",\n            \"s3UploadSource\": {\n              \"sourceLocation\": {\n                \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                \"fileId\": \"DNA_5_9_21_results.xlsx\"\n              },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n            \"dataObjectMetadataEntries\": [{\n              \"attribute\": \"file_description\",\n              \"value\": \"DNA results from 5-9-2021\"\n            }]\n          }\n        ]\n      }\n      \n    (c) AWS S3 directory scan and bulk data objects registration example\n    \n        {\n          \"dryRun\": false,\n          \"directoryScanRegistrationItems\": [{\n            \"basePath\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demonstration\",\n            \"s3ScanDirectory\": {\n              \"directoryLocation\": {\n                \"fileContainerId\": \"13789bd2-88af-11ea-bf84-0e6cccbb0103\",\n                \"fileId\": \"Asset_H1_M1_update_MnM\"\n              },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n            \"bulkMetadataEntries\": {\n              \"pathsMetadataEntries\": [{\n                \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M1_update_MnM\",\n                \"pathMetadataEntries\": [{\n                    \"attribute\": \"collection_type\",\n                    \"value\": \"Asset\"\n                  },\n                  {\n                    \"attribute\": \"asset_identifier\",\n                    \"value\": \"H1_M1_update_MnM\"\n                  },\n                  {\n                    \"attribute\": \"asset_name\",\n                    \"value\": \"H1_M2\"\n                  },\n                  {\n                    \"attribute\": \"description\",\n                    \"value\": \" Demo data of Accelerating Therapeutics for Opportunities in Medicine (ATOM)\"\n                  },\n                  {\n                    \"attribute\": \"asset_type\",\n                    \"value\": \"Dataset\"\n                  }\n                ]\n              }]\n            }\n          }],\n          \"dataObjectRegistrationItems\": [{\n              \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M7/combined_data_combat_5_8_21.csv\",\n              \"s3UploadSource\": {\n                \"sourceLocation\": {\n                  \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                  \"fileId\": \"combined_data_combat_5_8_21.csv\"\n                },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n              \"dataObjectMetadataEntries\": [{\n                \"attribute\": \"file_description\",\n                \"value\": \"Combined results from 5-8-2021\"\n              }]\n            },\n            {\n              \"path\": \"/NCI_DOE_Archive/ATOM/Study_Neurocrine_H1_Demo/Asset_H1_M7/combined_data_combat_5_9_21.csv\",\n              \"s3UploadSource\": {\n                \"sourceLocation\": {\n                  \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                  \"fileId\": \"combined_data_combat_5_9_21.csv\"\n                },\n                \"account\": {\n                  \"accessKey\": \"*******\",\n                  \"secretKey\": \"*******\",\n                  \"region\": \"us-east-1\"\n                }\n              },\n              \"dataObjectMetadataEntries\": [{\n                \"attribute\": \"file_description\",\n                \"value\": \"Combined results from 5-9-2021\"\n              }]\n            }\n          ]\n        }\n    \n    \n  4. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -H \"Content-Type: application/json\" -d @attributesFile.json -X PUT https://modac.cancer.gov/api/v2/registration -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n",
        "summary": "Bulk Registration.",
        "tags": [
          "Upload Data"
        ],
        "operationId": "BulkRegistration",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Bulk Registration",
            "description": "Bulk Registration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectRegistrationResponseDTORes"
            },
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n    ",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" }"
          }
        }
      }
    }
  },
  "definitions": {
    "Path": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "ModelPath": {
      "type": "object",
      "properties": {
        "modelPaths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          }
        }
      }
    },
    "ReferenceDataset": {
      "type": "object",
      "properties": {
        "referenceDatasetPaths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          }
        }
      }
    },
    "ModelStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "startDate": {
          "type": "number"
        },
        "completedDate": {
          "type": "number"
        },
        "resultPath": {
          "type": "string"
        },
        "failureMsg": {
          "type": "string"
        },
        "inputFile": {
          "type": "string"
        },
        "outcomeFile": {
          "type": "string"
        }
      }
    },
    "HpcBulkDataObjectDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "appendPathToDownloadDestination": {
          "type": "boolean"
        },
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        }
      },
      "title": "HpcBulkDataObjectDownloadRequestDTO",
      "xml": {
        "name": "HpcBulkDataObjectDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkDataObjectDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationFile": {
          "xml": {
            "name": "destinationFile",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcBulkDataObjectDownloadResponseDTO",
      "xml": {
        "name": "HpcBulkDataObjectDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntries": {
      "type": "object",
      "properties": {
        "defaultCollectionMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "pathsMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcBulkMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntries",
      "xml": {
        "name": "HpcBulkMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntry": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntry",
      "xml": {
        "name": "HpcBulkMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDTOReq": {
      "type": "object",
      "properties": {
        "collection": {
          "xml": {
            "name": "collection",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcCollectionReq"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesReq"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcCollectionDTOReq",
      "xml": {
        "name": "HpcCollectionDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDTORes": {
      "type": "object",
      "properties": {
        "collection": {
          "xml": {
            "name": "collection",
            "attribute": false,
            "wrapped": false
          }
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesRes"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcCollectionDTORes",
      "xml": {
        "name": "HpcCollectionDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionDownloadResponseDTO",
      "xml": {
        "name": "HpcCollectionDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListDTOReq": {
      "type": "object",
      "properties": {
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionDTOReq"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcCollectionListDTOReq",
      "xml": {
        "name": "HpcCollectionListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListDTORes": {
      "type": "object",
      "properties": {
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionDTORes"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcCollectionListDTORes",
      "xml": {
        "name": "HpcCollectionListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListingEntryReq": {
      "type": "object",
      "properties": {
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionListingEntryReq",
      "xml": {
        "name": "HpcCollectionListingEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListingEntryRes": {
      "type": "object",
      "properties": {
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionListingEntryRes",
      "xml": {
        "name": "HpcCollectionListingEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionRegistrationDTO": {
      "type": "object",
      "properties": {
        "createParentCollections": {
          "type": "boolean"
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        }
      },
      "title": "HpcCollectionRegistrationDTO",
      "xml": {
        "name": "HpcCollectionRegistrationDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionReq": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionInheritance": {
          "type": "string",
          "xml": {
            "name": "collectionInheritance",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionMapId": {
          "type": "string",
          "xml": {
            "name": "collectionMapId",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerName": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerZone": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerZone",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionParentName": {
          "type": "string",
          "xml": {
            "name": "collectionParentName",
            "attribute": false,
            "wrapped": false
          }
        },
        "comments": {
          "type": "string",
          "xml": {
            "name": "comments",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryReq"
          }
        },
        "info1": {
          "type": "string",
          "xml": {
            "name": "info1",
            "attribute": false,
            "wrapped": false
          }
        },
        "info2": {
          "type": "string",
          "xml": {
            "name": "info2",
            "attribute": false,
            "wrapped": false
          }
        },
        "specColType": {
          "type": "string",
          "xml": {
            "name": "specColType",
            "attribute": false,
            "wrapped": false
          }
        },
        "subCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryReq"
          }
        }
      },
      "title": "HpcCollectionReq",
      "xml": {
        "name": "HpcCollection",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionRes": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionInheritance": {
          "type": "string",
          "xml": {
            "name": "collectionInheritance",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionMapId": {
          "type": "string",
          "xml": {
            "name": "collectionMapId",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerName": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerZone": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerZone",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionParentName": {
          "type": "string",
          "xml": {
            "name": "collectionParentName",
            "attribute": false,
            "wrapped": false
          }
        },
        "comments": {
          "type": "string",
          "xml": {
            "name": "comments",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryRes"
          }
        },
        "info1": {
          "type": "string",
          "xml": {
            "name": "info1",
            "attribute": false,
            "wrapped": false
          }
        },
        "info2": {
          "type": "string",
          "xml": {
            "name": "info2",
            "attribute": false,
            "wrapped": false
          }
        },
        "specColType": {
          "type": "string",
          "xml": {
            "name": "specColType",
            "attribute": false,
            "wrapped": false
          }
        },
        "subCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryRes"
          }
        }
      },
      "title": "HpcCollectionRes",
      "xml": {
        "name": "HpcCollection",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQuery": {
      "type": "object",
      "properties": {
        "compoundQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCompoundMetadataQuery"
          }
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "AND",
            "OR"
          ]
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataQuery"
          }
        }
      },
      "title": "HpcCompoundMetadataQuery",
      "xml": {
        "name": "HpcCompoundMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQueryDTO": {
      "type": "object",
      "properties": {
        "compoundQuery": {
          "xml": {
            "name": "compoundQuery",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcCompoundMetadataQuery"
        },
        "compoundQueryType": {
          "type": "string",
          "xml": {
            "name": "compoundQueryType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "COLLECTION",
            "DATA_OBJECT"
          ]
        },
        "detailedResponse": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "boolean"
        }
      },
      "title": "HpcCompoundMetadataQueryDTO",
      "xml": {
        "name": "HpcCompoundMetadataQueryDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDTOReq": {
      "type": "object",
      "properties": {
        "dataObject": {
          "xml": {
            "name": "dataObject",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcDataObjectReq"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesReq"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcDataObjectDTOReq",
      "xml": {
        "name": "HpcDataObjectDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDTORes": {
      "type": "object",
      "properties": {
        "dataObject": {
          "xml": {
            "name": "dataObject",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcDataObjectRes"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesRes"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcDataObjectDTORes",
      "xml": {
        "name": "HpcDataObjectDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationFile": {
          "xml": {
            "name": "destinationFile",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "downloadRequestURL": {
          "type": "string",
          "xml": {
            "name": "downloadRequestURL",
            "attribute": false,
            "wrapped": false
          }
        },
        "restoreInProgress": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcDataObjectDownloadResponseDTO",
      "xml": {
        "name": "HpcDataObjectDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectListDTOReq": {
      "type": "object",
      "properties": {
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectDTOReq"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectListDTOReq",
      "xml": {
        "name": "HpcDataObjectListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectListDTORes": {
      "type": "object",
      "properties": {
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectDTORes"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectListDTORes",
      "xml": {
        "name": "HpcDataObjectListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRegistrationRequestDTO": {
      "type": "object",
      "properties": {
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "checksum": {
          "type": "string",
          "xml": {
            "name": "checksum",
            "attribute": false,
            "wrapped": false
          }
        },
        "createParentCollections": {
          "type": "boolean"
        },
        "extractMetadata": {
          "type": "boolean"
        },
        "extractedMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "fileSystemUploadSource": {
          "xml": {
            "name": "fileSystemUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "generateUploadRequestURL": {
          "type": "boolean"
        },
        "globusUploadSource": {
          "xml": {
            "name": "globusUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "googleDriveUploadSource": {
          "xml": {
            "name": "googleDriveUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "linkSourcePath": {
          "type": "string",
          "xml": {
            "name": "linkSourcePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        },
        "s3UploadSource": {
          "xml": {
            "name": "s3UploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "uploadParts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectRegistrationRequestDTO",
      "xml": {
        "name": "HpcDataObjectRegistrationRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectReq": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataName": {
          "type": "string",
          "xml": {
            "name": "dataName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataOwnerName": {
          "type": "string",
          "xml": {
            "name": "dataOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataPath": {
          "type": "string",
          "xml": {
            "name": "dataPath",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectReq",
      "xml": {
        "name": "HpcDataObject",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRes": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataName": {
          "type": "string",
          "xml": {
            "name": "dataName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataOwnerName": {
          "type": "string",
          "xml": {
            "name": "dataOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataPath": {
          "type": "string",
          "xml": {
            "name": "dataPath",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectRes",
      "xml": {
        "name": "HpcDataObject",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        },
        "synchronousDownloadFilter": {
          "xml": {
            "name": "synchronousDownloadFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcSynchronousDownloadFilter"
        }
      },
      "title": "HpcDownloadRequestDTO",
      "xml": {
        "name": "HpcDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcFileLocation": {
      "type": "object",
      "properties": {
        "fileContainerId": {
          "type": "string",
          "xml": {
            "name": "fileContainerId",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileContainerName": {
          "type": "string",
          "xml": {
            "name": "fileContainerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileId": {
          "type": "string",
          "xml": {
            "name": "fileId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcFileLocation",
      "xml": {
        "name": "HpcFileLocation",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGlobusDownloadDestination": {
      "type": "object",
      "properties": {
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "destinationOverwrite": {
          "type": "boolean"
        }
      },
      "title": "HpcGlobusDownloadDestination",
      "xml": {
        "name": "HpcGlobusDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGoogleDownloadDestination": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcGoogleDownloadDestination",
      "xml": {
        "name": "HpcGoogleDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntriesReq": {
      "type": "object",
      "properties": {
        "parentMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "selfMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcMetadataEntriesReq",
      "xml": {
        "name": "HpcMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntriesRes": {
      "type": "object",
      "properties": {
        "parentMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "parentMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "selfMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "selfMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcMetadataEntriesRes",
      "xml": {
        "name": "HpcMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntry": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "levelLabel": {
          "type": "string",
          "xml": {
            "name": "levelLabel",
            "attribute": false,
            "wrapped": false
          }
        },
        "unit": {
          "type": "string",
          "xml": {
            "name": "unit",
            "attribute": false,
            "wrapped": false
          }
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataEntry",
      "xml": {
        "name": "HpcMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQuery": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "attributeMatch": {
          "type": "string",
          "xml": {
            "name": "attributeMatch",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "ANY",
            "EXACT"
          ]
        },
        "format": {
          "type": "string",
          "xml": {
            "name": "format",
            "attribute": false,
            "wrapped": false
          }
        },
        "levelFilter": {
          "xml": {
            "name": "levelFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataQueryLevelFilter"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataQuery",
      "xml": {
        "name": "HpcMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQueryLevelFilter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "xml": {
            "name": "label",
            "attribute": false,
            "wrapped": false
          }
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        }
      },
      "title": "HpcMetadataQueryLevelFilter",
      "xml": {
        "name": "HpcMetadataQueryLevelFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3Account": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string",
          "xml": {
            "name": "accessKey",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathStyleAccessEnabled": {
          "type": "boolean"
        },
        "region": {
          "type": "string",
          "xml": {
            "name": "region",
            "attribute": false,
            "wrapped": false
          }
        },
        "secretKey": {
          "type": "string",
          "xml": {
            "name": "secretKey",
            "attribute": false,
            "wrapped": false
          }
        },
        "url": {
          "type": "string",
          "xml": {
            "name": "url",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcS3Account",
      "xml": {
        "name": "HpcS3Account",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3DownloadDestination": {
      "type": "object",
      "properties": {
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcS3DownloadDestination",
      "xml": {
        "name": "HpcS3DownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcStreamingUploadSource": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "sourceInputStream": {
          "xml": {
            "name": "sourceInputStream",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/InputStream"
        },
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "sourceSize": {
          "type": "integer",
          "format": "int64"
        },
        "sourceURL": {
          "type": "string",
          "xml": {
            "name": "sourceURL",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcStreamingUploadSource",
      "xml": {
        "name": "HpcStreamingUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcSynchronousDownloadFilter": {
      "type": "object",
      "properties": {
        "compressedArchiveType": {
          "type": "string",
          "xml": {
            "name": "compressedArchiveType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "TAR",
            "TGZ",
            "ZIP"
          ]
        },
        "includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patternType": {
          "type": "string",
          "xml": {
            "name": "patternType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "REGEX",
            "SIMPLE"
          ]
        }
      },
      "title": "HpcSynchronousDownloadFilter",
      "xml": {
        "name": "HpcSynchronousDownloadFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcUploadSource": {
      "type": "object",
      "properties": {
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcUploadSource",
      "xml": {
        "name": "HpcUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "Locale": {
      "type": "object",
      "title": "Locale"
    },
    "HpcBulkDataObjectRegistrationRequestDTO": {
      "type": "object",
      "properties": {
        "dataObjectRegistrationItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectRegistrationItemDTO"
          }
        },
        "directoryScanRegistrationItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDirectoryScanRegistrationItemDTO"
          }
        },
        "dryRun": {
          "type": "boolean"
        },
        "uiURL": {
          "type": "string",
          "xml": {
            "name": "uiURL",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcBulkDataObjectRegistrationRequestDTO",
      "xml": {
        "name": "HpcBulkDataObjectRegistrationRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRegistrationItemDTO": {
      "type": "object",
      "properties": {
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "createParentCollections": {
          "type": "boolean"
        },
        "dataObjectMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "fileSystemUploadSource": {
          "xml": {
            "name": "fileSystemUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "globusUploadSource": {
          "xml": {
            "name": "globusUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "googleDriveUploadSource": {
          "xml": {
            "name": "googleDriveUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "linkSourcePath": {
          "type": "string",
          "xml": {
            "name": "linkSourcePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "s3UploadSource": {
          "xml": {
            "name": "s3UploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        }
      },
      "title": "HpcDataObjectRegistrationItemDTO",
      "xml": {
        "name": "HpcDataObjectRegistrationItemDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDirectoryScanRegistrationItemDTO": {
      "type": "object",
      "properties": {
        "basePath": {
          "type": "string",
          "xml": {
            "name": "basePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "bulkMetadataEntries": {
          "xml": {
            "name": "bulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        },
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileSystemScanDirectory": {
          "xml": {
            "name": "fileSystemScanDirectory",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcScanDirectory"
        },
        "globusScanDirectory": {
          "xml": {
            "name": "globusScanDirectory",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcScanDirectory"
        },
        "googleDriveScanDirectory": {
          "xml": {
            "name": "googleDriveScanDirectory",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleScanDirectory"
        },
        "includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pathMap": {
          "xml": {
            "name": "pathMap",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcDirectoryScanPathMap"
        },
        "patternType": {
          "type": "string",
          "xml": {
            "name": "patternType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "REGEX",
            "SIMPLE"
          ]
        },
        "s3ScanDirectory": {
          "xml": {
            "name": "s3ScanDirectory",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3ScanDirectory"
        }
      },
      "title": "HpcDirectoryScanRegistrationItemDTO",
      "xml": {
        "name": "HpcDirectoryScanRegistrationItemDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcScanDirectory": {
      "type": "object",
      "properties": {
        "directoryLocation": {
          "xml": {
            "name": "directoryLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcScanDirectory",
      "xml": {
        "name": "HpcScanDirectory",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGoogleScanDirectory": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "directoryLocation": {
          "xml": {
            "name": "directoryLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcGoogleScanDirectory",
      "xml": {
        "name": "HpcGoogleScanDirectory",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDirectoryScanPathMap": {
      "type": "object",
      "properties": {
        "fromPath": {
          "type": "string",
          "xml": {
            "name": "fromPath",
            "attribute": false,
            "wrapped": false
          }
        },
        "toPath": {
          "type": "string",
          "xml": {
            "name": "toPath",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcDirectoryScanPathMap",
      "xml": {
        "name": "HpcDirectoryScanPathMap",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3ScanDirectory": {
      "type": "object",
      "properties": {
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "directoryLocation": {
          "xml": {
            "name": "directoryLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcS3ScanDirectory",
      "xml": {
        "name": "HpcS3ScanDirectory",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkDataObjectRegistrationResponseDTORes": {
      "type": "object",
      "properties": {
        "dataObjectRegistrationItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectRegistrationItemDTORes"
          }
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcBulkDataObjectRegistrationResponseDTORes",
      "xml": {
        "name": "HpcBulkDataObjectRegistrationResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRegistrationItemDTORes": {
      "type": "object",
      "properties": {
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "createParentCollections": {
          "type": "boolean"
        },
        "dataObjectMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "dataObjectMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "fileSystemUploadSource": {
          "xml": {
            "name": "fileSystemUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "globusUploadSource": {
          "xml": {
            "name": "globusUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "googleDriveUploadSource": {
          "xml": {
            "name": "googleDriveUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "linkSourcePath": {
          "type": "string",
          "xml": {
            "name": "linkSourcePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntriesRes"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "s3UploadSource": {
          "xml": {
            "name": "s3UploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        }
      },
      "title": "HpcDataObjectRegistrationItemDTORes",
      "xml": {
        "name": "HpcDataObjectRegistrationItemDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntriesRes": {
      "type": "object",
      "properties": {
        "defaultCollectionMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "defaultCollectionMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "pathsMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "pathsMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcBulkMetadataEntryRes"
          }
        }
      },
      "title": "HpcBulkMetadataEntriesRes",
      "xml": {
        "name": "HpcBulkMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntryRes": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "pathMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntryRes",
      "xml": {
        "name": "HpcBulkMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    }
  }
}