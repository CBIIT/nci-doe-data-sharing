{
  "swagger": "2.0",
  "info": {
    "version": "1.11.0",
    "description": "This user guide describes how to use the MoDaC REST Application Programming Interface.\n\nThe MoDaC REST API provides the ability to upload and download assets,  manage associated metadata, and search for assets against these metadata. Assets include datasets and machine learning models.\n\nA *collection* is a logical directory on MoDaC. A data object represents an individual file. Data objects reside in collections. Collections can also contain other collections. Collections and data objects can be logically structured in a hierarchal manner, depicted with a tree structure with parents and children.\n\nA *metadata attribute* consists of the attribute name and the attribute value. Each object or collection is associated with its required and user defined metadata. The required metadata needs to be provided when the collection or object is first created.\n\nA *collection* is associated with a type, defined by the collection_type attribute.  MoDaC presently supports three collection types – Program, Study and Asset, organized hierarchically.  Program is the top level collection. A Program can contain one or more collections of type Study, and a Study can contain one of more collections of type Asset. The asset_type attribute denotes the type of an Asset. It can take on the value model or dataset.\n\nA *child* entity (collection or data object) always inherits the metadata of its parent and other ancestors in that hierarchy. Child entities can however override the parent metadata. This facilitates advanced searches where the data objects or collections can be searched based on their own metadata or their parent metadata. Searches can also be limited to a specific level in the hierarchy.",
    "title": "MoDaC API"
  },
  "host": "fsdmel-modac01t.ncifcrf.gov",
  "basePath": "/",
  "paths": {
    "/api/authenticate": {
      "get": {
        "description": "This service allows you to generate a authentication token. Once the token is returned, you must create a file *curl-conf* and put the generated token inside that file to use it for running any command. \n\n  The *curl-conf* file should replicate the following content :\n  \n\n-H \"Authorization:Bearer < Authentication token >\n\n\n\n\n\n1. **CURL COMMAND**\n  ```\n  curl -k https://fsdmel-modac01t.ncifcrf.gov/api/authenticate -u <Your Email Id>\n  ```\n\n2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k https://fsdmel-modac01t.ncifcrf.gov/api/authenticate -u us39@nih.gov\n  \n  Token - Example\n  \n  eyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1s\n  ```\n3. **EXAMPLE - *curl-conf* file.**\n  ```\n  -H \"Authorization:Bearer eyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1\"\n  ```\n  \n",
        "tags": [
          "Authenticate"
        ],
        "summary": "authenticate",
        "operationId": "authenticateUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "```\neyeyJVidXMzOUBnZW9yZ2V0b3duLmVkdSIsImV4cCI6MTYxNjA3NzI4MH0.JDarFW3FeROrE-HQyz9GmSUzlxNvIkBrFEl9CIuct1s\n```"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/collection/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific collection including all of its hierarchical metadata. Use the path parameter to specify the path to the collection of interest. In the output, the collection and selfMetadataEntries elements provide information about the collection you specified, while the parentMetadataEntries element provides information about the collection that contains the collection you specified. If you set the list parameter to true, the subCollections element lists the child collections of this collection and the dataObjects element lists the data objects of this collection. The list parameter is optional and its default is false. \n\n**Query Params**\n*list* – If set to true, the API will list the child collections and data objects of this collection. This is an optional parameter and default is false\n\n*includeAcl* – If set to true, the API will provide the permission of the requesting user to this collection (READ, WRITE or OWN). This is an optional parameter and the default is false\n\n\n1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X GET https://modac.cancer.gov/api/collection/{path}?list=[true|false]&includeAcl=[true|false] -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n  \n  ```\n\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k 'https://modac.cancer.gov/api/collection/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1?list=true&includeAcl=true' -D header.txt -o output.json -u myemailid@nih.gov\n  ```\n",
        "summary": "Get collection information.",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "CollectionByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "includeAcl",
            "in": "query",
            "description": "includeAcl",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "list",
            "in": "query",
            "description": "list",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcCollectionListDTORes"
            },
            "description": "HTTP/1.1 200 OK\n**Output**:\n\n\n         [{\n            \"collection\": {\n              \"collectionId\": 941408,\n              \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1\",\n              \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1\",\n              \"collectionParentName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1\",\n              \"collectionOwnerName\": \"ncidoesvct2\",\n              \"collectionOwnerZone\": \"ncifHpcZone\",\n              \"collectionMapId\": \"0\",\n              \"collectionInheritance\": \"1\",\n              \"comments\": \"\",\n              \"info1\": \"\",\n              \"info2\": \"\",\n              \"createdAt\": \"2021-01-21T06:15:13.000+00:00\",\n              \"specColType\": \"NORMAL\",\n              \"subCollections\": [],\n              \"dataObjects\": [{\n                \"id\": 941458,\n                \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/results.xlsx\",\n                \"dataSize\": 0,\n                \"createdAt\": null\n              }, {\n                \"id\": 945090,\n                \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/combined_rna_data_combat.fastq\",\n                \"dataSize\": 0,\n                \"createdAt\": null\n              }, {\n                \"id\": 941448,\n                \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/combined_rnas.rtfd.zip\",\n                \"dataSize\": 0,\n                \"createdAt\": null\n              }, {\n                \"id\": 941434,\n                \"path\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/1_21_2021_1.txt\",\n                \"dataSize\": 0,\n                \"createdAt\": null\n              }]\n            },\n            \"metadataEntries\": {\n              \"selfMetadataEntries\": [{\n                \"attribute\": \"attribute_1_29_2021\",\n                \"value\": \"Udit\",\n                \"unit\": null,\n                \"level\": null,\n                \"levelLabel\": null,\n                \"collectionId\": null\n              }, {\n                \"attribute\": \"metadata_updated\",\n                \"value\": \"02-05-2021 17:16:06\",\n                \"unit\": null,\n                \"level\": null,\n                \"levelLabel\": null,\n                \"collectionId\": null\n              }, {\n                \"attribute\": \"DNA\",\n                \"value\": \"Yes\",\n                \"unit\": null,\n                \"level\": null,\n                \"levelLabel\": null,\n                \"collectionId\": null\n              }],\n              \"parentMetadataEntries\": [{\n                \"attribute\": \"configuration_id\",\n                \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\",\n                \"collectionId\": null\n              }, {\n                \"attribute\": \"dme_data_id\",\n                \"value\": \"936ij672\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\",\n                \"collectionId\": null\n              }, {\n                \"attribute\": \"metadata_updated\",\n                \"value\": \"01-29-2021 15:17:04\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 2,\n                \"levelLabel\": \"Study\",\n                \"collectionId\": null\n              }, {\n                \"attribute\": \"data_id\",\n                \"value\": \"1343s22r4\",\n                \"unit\": \"EMPTY_ATTR_UNIT\",\n                \"level\": 3,\n                \"levelLabel\": \"Program\",\n                \"collectionId\": null\n              }]\n            },\n            \"permission\": \"READ\"\n          }]",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "This service allows you to register an empty collection (Program, Study or Asset) if you have a MoDaC user account with upload permission. If this is an existing collection, you can update its metadata.\n\n\nBy default, this service expects the containing collection for the collection you are registering to already exist at the time of registration. However, you can optionally request that this service create the parent and higher-level collections. To do so, set the *createParentCollections* indicator in the json file to true, and provide the list of metadata for the parent collections through *parentCollectionsBulkMetadataEntries*. In this case, this service creates the entire collection hierarchy above the registered collection.\n\n1. **CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X PUT https://modac.cancer.gov/api/collection/{path} -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n  \n  ```\n  2.  **attributesFile.json Example**\n  ```\n     {\n     \"createParentCollections\": true,\n        \"metadataEntries\": [{\n            \"attribute\": \"study_identifier\",\n            \"value\": \"Study_1\"\n          },\n          {\n            \"attribute\": \"collection_type\",\n            \"value\": \"Study\"\n          }\n        ],\n        \n        \"parentCollectionsBulkMetadataEntries\": {\n          \"defaultCollectionMetadataEntries\": [{\n            \"attribute\": \"collection_type\",\n            \"value\": \"Study\"\n          }]\n        }\n      }\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -H \"Content-Type: application/json\" -d @collection.json -X PUT https://modac.cancer.gov/api/collection/NCI_DOE_Archive/JDCS5C/JDCS5C_Pilot1 -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n",
        "summary": "Register an empty collection.",
        "tags": [
          "Upload Data"
        ],
        "operationId": "CollectionByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "collectionRegistration",
            "description": "collectionRegistration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCollectionRegistrationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/collection/query": {
      "post": {
        "description": "This service allows you to perform a query for a collection. To do a collection query, first we define the simple query, then we show how to combine multiple simple queries into a compound query.\n\n\n  Simple query is the basic building block of the compound query. It consists of :\n  \n  • *attribute* - This is the metadata attribute name which you want to query.\n    \n  • *value* - This is the metadata attribute's value which you want to query.\n    \n  • *operator* - When searching for a collection, you could limit your search to a level using comparison operators like EQUAL, NOT_EQUAL, LIKE, NUM_LESS_THAN, NUM_LESS_OR_EQUAL, NUM_GREATER_OR_EQUAL, NUM_GREATER_THAN.  \n    \n  • *levelFilter* - This is an optional attribute. This enables broader search support in cases where users may have forgotten the exact level a certain metadata attribute may be associated with. It involves the use of *level* and *opperator* attributes. If levelFilter attribute is used, search will match the metadata found at the specified *level*. If this filter is not provided, the query will match metadata found at any level of the path.\n    \n  • *attributeMatch* - This is an optional attribute. If it’s set to *ANY*, then the query will apply to any metadata attribute, and in this case the ‘attribute’ of the query is expected to be omitted. If ‘attributeMatch’ is omitted, or set to EXACT, then the search will be limited to the provided attribute's metadata.\n\n    \n   Multiple simple queries can be combined to create desired search criteria with a join operator. \n      \n   **Compound Query**:\n      Compound query consists of three parts:\n      1.  Join operator\n      2.  List of queries (filtering criteria)\n      3.  List of Compound queries (filtering criteria)\n      \n  Compound query should at least have one simple query that could be part of list of queries or list of nested compound queries.\n      \n  **Join Operator**:\n      Join operator is used to combine multiple simple or compound queries or both (i.e., simple and compound). Valid values are “AND”, “OR”.\n      \n  **List of queries**:\n      List of queries are collection of one or more simple queries combined with join operator. \n      Example:\n      \n       {\n                \"queries\":  [\n          {\n              \"attribute\": \"name\",\n              \"value\": \"Experiment1\",\n              \"operator\": \"EQUAL\",\n              \"levelFilter\": {\n                  \"level\": 1,\n                  \"operator\": \"EQUAL\"\n              }\n           },\n          {\n              \"attribute\": \"pi_name\",\n              \"value\": \"John Doe\",\n              \"operator\": \"EQUAL\"\n           }\n       ]\n       }\n\n  **List of compound queries**:\n    An optional list of compound query. The top most compound query can include a nested list of compound queries up to 10 nesting levels.\n    \n  This is a nested list of compound queries to support complex search criteria\n  \n  Example:\n          \n    {\n             \"compoundQuery\": {\n               \"operator\": \"AND\",\n               \"queries\": [{\n                   \"attribute\": \"experiment\",\n                   \"value\": \"H1_M2_update_10M\",\n                   \"operator\": \"EQUAL\",\n                   \"levelFilter\": {\n                     \"level\": 1,\n                     \"operator\": \"NOT_EQUAL\"\n                   }\n                 },\n                 {\n                   \"attribute\": \"run_name\",\n                   \"value\": \"run_02_20_2020\",\n                   \"operator\": \"LIKE\"\n                 }\n               ]\n             },\n             \"detailedResponse\": true,\n             \"page\": 1,\n             \"totalCount\": false\n    }\n\n  \n  **detailedResponse**: By default, search lists returns only paths of matched resulted collections. If “detailedResponse=true”, collections are returned with metadata.\n  **page**: Ask for a specific page of results. By default, the query will return the first 100 results in page 1, the second 100 in page 2, etc. If omitted, page 1 is fetched. \n  **totalCount**: If set to ‘true’, the total count of collections matching the query regardless of the query limit and page will be returned. By default if omitted, this is set to false and no total count will be returned.\n  \n  \n  \n  \n  \n  \n\n  1. **CURL COMMAND TO GET GET A BOOKMARK BY NAME**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/collection/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n  \n  ```\n  2.  **attributesFile.json Example**\n  ```\n         {\n          \"compoundQuery\": {\n          \"operator\": \"AND\",\n          \"queries\": [{\n        \"attribute\": \"access_group\",\n        \"value\": \"public\",\n        \"operator\": \"LIKE\"\n          },\n                         {\n            \"attribute\": \"collection_type\",\n          \"value\": \"Asset\",\n        \"operator\": \"LIKE\"\n          }]},\n              \"detailedResponse\": true,\n            \"page\": 1,\n            \"pageSize\": 100,\n            \"totalCount\": true,\n  \n        }\n\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/collection/query -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ``` \n",
        "summary": "Find collection by metadata query.",
        "tags": [
          "Search Data"
        ],
        "operationId": "CollectionQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "compoundMetadataQuery",
            "description": "compoundMetadataQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCompoundMetadataQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcCollectionListDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n             {\n                \"collections\": [{\n                  \"collection\": {\n                    \"collectionId\": 936753,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"collectionParentName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1\",\n                    \"collectionOwnerName\": \"ncidoesvct2\",\n                    \"collectionOwnerZone\": \"ncifHpcZone\",\n                    \"collectionMapId\": \"0\",\n                    \"collectionInheritance\": \"1\",\n                    \"comments\": null,\n                    \"info1\": null,\n                    \"info2\": null,\n                    \"createdAt\": \"2020-09-24T16:10:22.000+00:00\",\n                    \"specColType\": null,\n                    \"subCollections\": [],\n                    \"dataObjects\": []\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"configuration_id\",\n                      \"value\": \"8cfbd72f-2509-4ece-a954-88f2d7121998\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"dme_data_id\",\n                      \"value\": \"NCI-DME-MS01-936753\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"poc_email\",\n                      \"value\": \"sehgalu2a@nih.gov\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"access_group\",\n                      \"value\": \"public\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"permission\": null\n                }],\n                \"collectionPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 71\n              }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/{path}/generateDownloadRequestURL": {
      "post": {
        "description": "\nThis service allows you to generate a *download request URL* that can then be used to download the data file directly from MoDaC using wget or other commands. \n \n\n\n 1. **CURL COMMAND**\n    ```\n    curl -k -H \"Content-Type: application/json\" -X GET https://modac.cancer.gov/api/ dataObject/{path}/generateDownloadRequestURL -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n    ```\n2. **EXAMPLE - CURL COMMAND**\n    ```\n    curl -k -H \"Content-Type: application/json\" -X GET https://modac.cancer.gov/api/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/File1.fastq/generateDownloadRequestURL -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n    ``` \n    \n3. **WGET COMMAND**\n    ```\n    wget -O OutputFileName “DownloadRequestURL”\n    ``` \n \n \n4. **EXAMPLE - WGET COMMAND**\n    ```\n   wget -O OutputFileName “http://s3-nci-north.ha.nci.nih.gov/dme-nci-doe-prodcld/NCI_DOE/NCI_DOE_Archive/ATOM/Neurocrne_H1_Demonstration/H1_M1_update_10M/H1_M2_10nM_update_20210308.csv?X-Amz-A4997e7568”\n    ``` \n",
        "summary": "Generate a download request URL.",
        "tags": [
          "Download Data"
        ],
        "operationId": "DataObjectGenerateDownloadRequestURLByPathGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDownloadResponseDTO"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n\n    {\n    \"downloadRequestURL\": \"http://s3-nci-north.ha.nci.nih.gov/MoDaC-prod-bucket/NCI_DOE_Archive/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_user1/File1.fastq?X-Amz-Algorithm=AWS4-HMAC-SH-Signature=88b826fc411db2838f3ef1244ace1786ce5dcc7d14ffb78e070f6d131ec0a4e1\"\n    }",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/dataObject/query": {
      "post": {
        "description": "This service allows you to perform a query for a data file. You can perform a simple query, or you can combine multiple simple queries into a compound query.\n\nSimple query is the basic building block of the compound query. It consists of :\n  \n  • *attribute* - This is the metadata attribute name which you want to query.\n    \n  • *value* - This is the metadata attribute's value which you want to query.\n    \n  • *operator* - When searching for a collection, you could limit your search to a level using comparison operators like EQUAL, NOT_EQUAL, LIKE, NUM_LESS_THAN, NUM_LESS_OR_EQUAL, NUM_GREATER_OR_EQUAL, NUM_GREATER_THAN.  \n    \n  • *levelFilter* - This is an optional attribute. This enables broader search support in cases where users may have forgotten the exact level a certain metadata attribute may be associated with. It involves the use of *level* and *opperator* attributes. If levelFilter attribute is used, search will match the metadata found at the specified *level*. If this filter is not provided, the query will match metadata found at any level of the path.\n    \n  • *attributeMatch* - This is an optional attribute. If it’s set to *ANY*, then the query will apply to any metadata attribute, and in this case the ‘attribute’ of the query is expected to be omitted. If ‘attributeMatch’ is omitted, or set to EXACT, then the search will be limited to the provided attribute's metadata.\n  \n  Multiple simple queries can be combined to create desired search criteria with a join operator. \n\n\n**Compound Query**:\n      Compound query consists of three parts:\n      1.  Join operator\n      2.  List of queries (filtering criteria)\n      3.  List of Compound queries (filtering criteria)\n      \n  Compound query should at least have one simple query that could be part of list of queries or list of nested compound queries.\n      \n  **Join Operator**:\n      Join operator is used to combine multiple simple or compound queries or both (i.e., simple and compound). Valid values are “AND”, “OR”.\n      \n  **List of queries**:\n      List of queries are collection of one or more simple queries combined with join operator. \n      Example:\n      \n       {\n                \"queries\":  [\n          {\n              \"attribute\": \"name\",\n              \"value\": \"Experiment1\",\n              \"operator\": \"EQUAL\",\n              \"levelFilter\": {\n                  \"level\": 1,\n                  \"operator\": \"EQUAL\"\n              }\n           },\n          {\n              \"attribute\": \"pi_name\",\n              \"value\": \"John Doe\",\n              \"operator\": \"EQUAL\"\n           }\n       ]\n       }\n\n  **List of compound queries**:\n    An optional list of compound query. The top most compound query can include a nested list of compound queries up to 10 nesting levels.\n    \n  This is a nested list of compound queries to support complex search criteria\n  \n  Example:\n          \n    {\n             \"compoundQuery\": {\n               \"operator\": \"AND\",\n               \"queries\": [{\n                   \"attribute\": \"experiment\",\n                   \"value\": \"H1_M2_update_10M\",\n                   \"operator\": \"EQUAL\",\n                   \"levelFilter\": {\n                     \"level\": 1,\n                     \"operator\": \"NOT_EQUAL\"\n                   }\n                 },\n                 {\n                   \"attribute\": \"run_name\",\n                   \"value\": \"run_02_20_2020\",\n                   \"operator\": \"LIKE\"\n                 }\n               ]\n             },\n             \"detailedResponse\": true,\n             \"page\": 1,\n             \"totalCount\": false\n    }\n\n  \n  **detailedResponse**: By default, search lists returns only paths of matched resulted data files. If “detailedResponse=true”, data objects are returned with their metadata.\n  **page**: Ask for a specific page of results. By default, the query will return the first 100 results in page 1, the second 100 in page 2, etc. If omitted, page 1 is fetched. \n  **totalCount**: If set to ‘true’, the total count of data files matching the query regardless of the query limit and page will be returned. By default if omitted, this is set to false and no total count will be returned.\n\n\n1. **CURL COMMAND**\n```\ncurl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/dataobject/query -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email Id>\n\n```\n2.  **attributesFile.json Example**\n```\n    {\n    \"compoundQuery\": {\n      \"operator\": \"AND\",\n      \"queries\": [{\n          \"attribute\": \"asset_identifier\",\n          \"value\": \"H1_Selectivity_Asset\",\n          \"operator\": \"LIKE\"\n        },\n        {\n          \"attribute\": \"data_transfer_status\",\n          \"value\": \"ARCHIVED\",\n          \"operator\": \"LIKE\"\n                  }\n                ]\n              },\n          \"page\": 1,\n          \"totalCount\": true\n        }\n\n```\n3. **EXAMPLE - CURL COMMAND**\n```\ncurl -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/dataObject/query?returnParent=true -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n```\n\n",
        "summary": "Find data file by compound metadata query.",
        "tags": [
          "Search Data"
        ],
        "operationId": "DataObjectQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "compoundMetadataQuery",
            "description": "compoundMetadataQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcCompoundMetadataQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectListDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**: \n\n            {\n                \"dataObjects\": [{\n                  \"dataObject\": {\n                    \"id\": 936762,\n                    \"collectionId\": 936753,\n                    \"dataName\": null,\n                    \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data\",\n                    \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataSize\": 0,\n                    \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                    \"dataOwnerName\": \"ncif-hpcdm-svc\",\n                    \"createdAt\": \"2020-09-24T16:12:45.000+00:00\"\n                  },\n                  \"metadataEntries\": {\n                    \"selfMetadataEntries\": [{\n                      \"attribute\": \"uuid\",\n                      \"value\": \"5a9b2128-88e2-4c35-8741-b7ba429d1f40\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by\",\n                      \"value\": \"ncidoesvct2\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"registered_by_name\",\n                      \"value\": \"DOE DOE\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"data_transfer_started\",\n                      \"value\": \"09-24-2020 12:13:12\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"archive_file_id\",\n                      \"value\": \"NCI_DOE_Archive/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_combat\",\n                      \"unit\": null,\n                      \"level\": 1,\n                      \"levelLabel\": \"DataObject\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"dme_data_id\",\n                      \"value\": \"NCI-DME-MS01-936753\",\n                      \"unit\": null,\n                      \"level\": 2,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }, {\n                      \"attribute\": \"metadata_updated\",\n                      \"value\": \"09-24-2020 12:10:26\",\n                      \"unit\": null,\n                      \"level\": 2,\n                      \"levelLabel\": \"Asset\",\n                      \"collectionId\": 936753\n                    }}]\n                  },\n                  \"percentComplete\": null,\n                  \"permission\": null\n                }],\n                \"dataObjectPaths\": [],\n                \"page\": 1,\n                \"limit\": 100,\n                \"totalCount\": 70",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/collection/{path}/download": {
      "post": {
        "description": "This service allows you to to transfer a collection from MoDaC to one of the following possible destinations:\n\n• Globus endpoint (asynchronous download)\n\n• AWS S3 (asynchronous download)\n\n When downloading a collection, the path parameter represents the logical path of the collection registered with MoDaC. When downloading a collection to a Globus endpoint or to an S3 bucket, the attributesFile.json must have the destination information as shown in the *attributesFile.json* example above. \n\n\n\n**Note**: A MoDaC user account is a pre-requisite for downloading data from MoDaC.  When downloading to a Globus endpoint, if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination file exists, this service overwrites the destination file. If you omit this indicator and the destination file exists, then this service rejects the transfer request. \n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details on how to add permission to your endpoint, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/collection/{path}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n \n ```\n 2.  **attributesFile.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        { \n          \"globusDownloadDestination\": {\n                                \"destinationOverwrite\" : true,\n            \"destinationLocation\": {\n              \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-2\",\n              \"fileId\": \"/coll-2-15-2021\"\n            }\n          }\n        }\n        \n  b. To request a download to AWS S3\n        { \n          \"s3DownloadDestination\": {\n            \"destinationLocation\": {\n              \"fileContainerId\": \"ccbr-sbg-1\",\n              \"fileId\": \"coll-many-files-12-10-18\"\n            },\n            \"account\" : {\n              \"accessKey\" : \"<insert-access-key\",\n              \"secretKey\" : \"<insert-secret-key\",\n              \"region\" :\"us-east-2\"\n            }\n          }\n        }\n\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/collection/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/asset_/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n ```\n",
        "summary": "Download a collection.",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2CollectionDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200",
            "schema": {
              "$ref": "#/definitions/HpcCollectionDownloadResponseDTO"
            },
            "headers": {}
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}": {
      "get": {
        "description": "This service allows you to get information about a specific data file including all of its hierarchical metadata. Use the path parameter to specify the path to the collection of interest. In the output, the dataObject and selfMetadataEntries elements provide information about the file you specified, while the parentMetadataEntries element provides information about the collection that contains the file you specified.\n\n**Query Params**\n*includeAcl* – If set to true, the API will provide the permission of the requesting user to this collection (READ, WRITE or OWN). This is an optional parameter and the default is false\n\n1. **CURL COMMAND**\n\n  ```\n  A) When 'includeAcl' is set to true\n  \n  curl -k 'https://modac.cancer.gov/api/v2/<DataObject Path>?includeAcl=true' -D header.txt -o output.json -u <Your Email Id>\n  \n  B) When 'includeAcl' is set to false\n  \n  curl -k 'https://modac.cancer.gov/api/v2/<DataObject Path>?includeAcl=false' -D header.txt -o output.json -u <Your Email Id>\n  \n  ```\n  2. **EXAMPLE - CURL COMMAND**\n  ```\n  A) When 'includeAcl' is set to true\n  \n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat?includeAcl=true' -D header.txt -o output.json -u us39@nih.gov\n  \n  B) When 'includeAcl' is set to false\n  \n  curl -k 'https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat?includeAcl=false' -D header.txt -o output.json -u us39@nih.gov\n  ```\n",
        "summary": "Get data file information.",
        "tags": [
          "Get Metadata"
        ],
        "operationId": "path",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "name": "includeAcl",
            "in": "query",
            "description": "includeAcl",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDTORes"
            },
            "description": "HTTP/1.1 200 \n**Output**:\n\n    {\n      \"dataObject\": {\n        \"id\": 936770,\n        \"collectionId\": 936753,\n          \"dataName\": null,\n          \"collectionName\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_1/anl_gene_expression\",\n        \"absolutePath\": \"/NCI_DOE_Archive/JDACS4C/JDACS4C_1/anl_gene_expression/combined_rnaseq_data_lincs1000_combat\",\n        \"dataSize\": 0,\n        \"dataPath\": \"/var/lib/irods/iRODS/Vault/home/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/combined_rnaseq_data_lincs1000_combat\",\n        \"dataOwnerName\": \"ncif-hpcdm-svc\",\n        \"createdAt\": \"2020-09-24T16:13:14.000+00:00\"\n      },\n      \"metadataEntries\": {\n        \"selfMetadataEntries\": {\n          \"userMetadataEntries\": [{\n            \"attribute\": \"file_description\",\n            \"value\": \"The gene expression datasets for cancer cell lines, generated using RNA-seq, were collected from the following sources: NCI-60, CCLE, and GDSC.\",\n            \"unit\": null,\n            \"level\": null,\n            \"levelLabel\": null,\n            \"collectionId\": null\n          }],\n          \"extractedMetadataEntries\": [],\n          \"systemMetadataEntries\": [{\n            \"attribute\": \"data_transfer_status\",\n            \"value\": \"ARCHIVED\",\n            \"unit\": null,\n            \"level\": null,\n            \"levelLabel\": null,\n            \"collectionId\": null\n          },  {\n            \"attribute\": \"data_transfer_type\",\n            \"value\": \"S_3\",\n            \"unit\": null,\n            \"level\": null,\n            \"levelLabel\": null,\n            \"collectionId\": null\n          }, {\n            \"attribute\": \"registered_by_name\",\n            \"value\": \"DOE DOE\",\n            \"unit\": null,\n            \"level\": null,\n            \"levelLabel\": null,\n            \"collectionId\": null\n          }, {\n            \"attribute\": \"data_transfer_request_id\",\n            \"value\": \"82261466\",\n            \"unit\": null,\n            \"level\": null,\n            \"levelLabel\": null,\n            \"collectionId\": null\n          }]\n        },\n        \"parentMetadataEntries\": [{\n          \"attribute\": \"collection_type\",\n          \"value\": \"Asset\",\n          \"unit\": \"EMPTY_ATTR_UNIT\",\n          \"level\": 2,\n          \"levelLabel\": \"Asset\",\n          \"collectionId\": null\n        }, {\n          \"attribute\": \"asset_type\",\n          \"value\": \"Dataset\",\n          \"unit\": \"EMPTY_ATTR_UNIT\",\n          \"level\": 2,\n          \"levelLabel\": \"Asset\",\n          \"collectionId\": null\n        }, {\"attribute\": \"uuid\",\n          \"value\": \"78fd8e4e-86bd-45db-96ed-997bb09dbc6e\",\n          \"unit\": \"EMPTY_ATTR_UNIT\",\n          \"level\": 2,\n          \"levelLabel\": \"Asset\",\n          \"collectionId\": null\n        },  {\n          \"attribute\": \"registered_by_name\",\n          \"value\": \"DOE DOE\",\n          \"unit\": \"EMPTY_ATTR_UNIT\",\n          \"level\": 4,\n          \"levelLabel\": \"Program\",\n          \"collectionId\": null\n        }]\n      },\n      \"percentComplete\": null,\n      \"permission\": \"READ\"\n        }\n    \n                                               ",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      },
      "put": {
        "description": "\n\n\nThis service allows you to register a data file from one of the following locations:\n\n   • Local file system (synchronous upload)\n   \n   • Globus endpoint (asynchronous upload)\n   \n   • AWS S3 (asynchronous upload)\n\n\n  Additionally, for registering a data file from a Globus endpoint, MODAC-PROD-App-Accts-Pool-NCI_DOE group must be added to your globus endoint. For details on how to add *MODAC-PROD-App-Accts-Pool-NCI_DOE* group to your endpoint, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n 1. **CURL COMMAND**\n  ```\n  A. Sync Registration \n  \n curl -k -F\n \"dataObjectRegistration=@<attributesFile.json>;type=application/json\"\n -F \"dataObject=@<filePath>\" -X PUT https://modac.cancer.gov/api/v2/dataObject/<collection path>/<dataObject name> -u < Email ID>\n\n\n B. Async Registration\n\n curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\"\n -X PUT https://modac.cancer.gov/api/v2/dataObject/<collection path>/<dataObject name> -D\n header.txt -o output.json -u <Your Email ID>\n  \n  ```\n  2.  **attributesFile.json Example**\n  \n  ```\n   A. Sync Upload - attributesFile.json\n         { \n           \"metadataEntries\": [\n             {\n               \"attribute\": \"description\",\n               \"value\": \"my-dataObject-description\"\n             },\n             {\n               \"attribute\": \"my-second-attribute-name\",\n               \"value\": \"my-second-attribute-value\"\n             }\n           ]\n       }\n       \n   B. Register from Globus - attributesFile.json\n   \n          {\n             \"globusUploadSource\": {\n               \"sourceLocation\": {\n                 \"fileContainerId\": \"16572124-19cb-11e9-934d-0e3d676669f4\",\n                 \"fileId\": \"DNA_12918_results.txt\"\n               }\n             },\n             \"metadataEntries\": [{\n               \"attribute\": \"description\",\n               \"value\": \"DNA results\"\n             }, {\n               \"attribute\": \"Asset Type\",\n               \"value\": \"DNA\"\n             },{\n                           \"attribute\": \"Asset_identifier\",\n                           \"value\": \"anl_drug_moa_information\"\n                   },{\n                           \"attribute\": \"Asset_name\",\n                           \"value\": \"Drug MoA Information\"\n                   }]\n           }\n         \n   C. Register from S3 - attributesFile.json\n           {\n               \"s3UploadSource\": {\n                 \"sourceLocation\": {\n                   \"fileContainerId\": \"s3-bucket-name\",\n                   \"fileId\": \"s3-object-key\"\n                 },\n                 \"account\" : {\n                   \"accessKey\" : \"aws-access-key\",\n                   \"secretKey\" : \"aws-secret-key\",\n                   \"region\" :\"aws-region\"\n                 }\n               },\n               \"metadataEntries\": [\n                 {\n                   \"attribute\": \"description\",\n                   \"value\": \"my-file-description\"\n                 }, \n                 {\n                   \"attribute\": \"my-second-attribute-name\",\n                   \"value\": \"my-second-attribute-description\"\n                 }\n               ]\n             }\n\n  ```\n  3. **EXAMPLE - CURL COMMAND**\n  \n  ```\n  A. Sync Registration \n  curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\" -F \"dataObject=@header.txt\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/1_28_2021_Cancer_gene_data.txt -u us39@nih.gov\n  \n  A. Async Registration\n  curl -k -F \"dataObjectRegistration=@attributesFile.json;type=application/json\" -X PUT https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_1/anl_cancer_gene_expression_data/1_28_2021_Cancer_gene_data.txt -D header.txt -o output.json -u us39@nih.gov\n  ```",
        "summary": "Register data file.",
        "tags": [
          "Upload Data"
        ],
        "operationId": "DataObjectByPathPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "dataObjectRegistration",
            "description": "dataObjectRegistration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDataObjectRegistrationRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 OK",
            "headers": {}
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/HpcDataObjectRes"
            },
            "description": "HTTP/1.1 201 Created",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/dataObject/{path}/download/": {
      "post": {
        "description": "\nThis service allows you to transfer a data file from MoDaC to one of the following possible destinations: \n \n \n\n• Local file system (synchronous download) \n\n• Globus endpoint (asynchronous download) \n\n• AWS S3 (asynchronous download) \n\n\n  When downloading a data file, the path parameter represents the logical path of the data file registered with MoDaC. When downloading files asynchronously (to a Globus endpoint or to an S3 bucket), the attributesFile.json must have the destination information as shown in the *attributesFile.json* example above. \n\n\n\n**Note**: A MoDaC user account is a pre-requisite for downloading data from MoDaC.  When downloading to a Globus endpoint, if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination file exists, this service overwrites the destination file. If you omit this indicator and the destination file exists, then this service rejects the transfer request. \n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details on how to add permission to your endpoint, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\n\n1. **CURL COMMAND**\n   ```\n    curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/dataObject/{path:.*}/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email IdD>\n  \n  2.  **JSON FILE EXAMPLES**\n  ``` \n  a. To request download to your file system\n                \n        { \n          \"metadataEntries\": [\n            {\n              \"attribute\": \"description\",\n              \"value\": \"my-dataObject-description\"\n            },\n            {\n              \"attribute\": \"my-second-attribute-name\",\n              \"value\": \"my-second-attribute-value\"\n            }\n          ]\n      }\n\n  \n  b. To request a download to a Globus endpoint\n\n      \n      \"JSON:\n      {\n        \"globusDownloadDestination\": {\n          \"destinationLocation\": {\n          \"fileContainerId\": \"4a3b132a-815f-11e7-8dff-22000b9923ef\",\n            \"fileId\": \"Results_02-02-21\"\n          },\n       \"destinationOverwrite\" : true,\n        }\n      }\n     \n      \n c.   To request a download to an S3 bucket\n          {\n            \"s3DownloadDestination\": {\n              \"destinationLocation\": {\n                \"fileContainerId\": \"ccbr-sbg-1\",\n                \"fileId\": \"demo-file-2-2-21\"\n              },\n              \"account\" : {\n                \"accessKey\" : \"***\",\n                \"secretKey\" : \"***\",\n                \"region\" :\"us-east-1\",\n              },\n          \"destinationURL\" : “https://...”\n            }\n          }\n\n\n  \n  ```\n  3. **EXAMPLE - CURL COMMAND to download a file to a Globus endpoint**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/12_1_2020/Data_12_1/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n  \n  \n  4. **EXAMPLE - CURL COMMAND to download a file to an S3 bucket**\n  \n  \n  ```\n  curl -k -H \"Content-Type: application/json\" -d @aattributesFile.json -X POST https://modac.cancer.gov/api/v2/dataObject/NCI_DOE_Archive/JDACS4C/12_1_2020/Data_12_1/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n  ```\n  \n  \n  \n  5.  **EXAMPLE - CURL COMMAND to download a file to your file system**\n  ```\n  curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/dataObject/NCI_DOE_Archive/JDACS4C/12_1_2020/Data_12_1/anl_drug_moa_information.xlsx/download -H \"Accept: application/json\" -D header_local.txt -u us39@nih.gov\n  ```\n",
        "summary": "Download a data file.",
        "tags": [
          "Download Data"
        ],
        "operationId": "V2DataObjectDownloadByPathPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".*",
            "description": ""
          },
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 \n**Output**:\n\n    {\n    \"downloadRequestURL\": \"http://s3-nci-north.ha.nci.nih.gov/NCI_DOE_Archive/JDACS6C/12_1_2020/Data_12_1/bulk_metadata_file2.xlsx?X-Amz-Algorithm=AWS407Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86399&X-Amz-Credential=00fe61fnci-north%2Fs3%2Faws4_request&X-Amz-Signature=b71a2f170a17614377\"\n  }",
            "schema": {
              "$ref": "#/definitions/HpcDataObjectDownloadResponseDTO"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    },
    "/api/v2/download": {
      "post": {
        "description": "This service allows you to to transfer a list of collections or a list of data objects from MoDaC to one of the following possible destinations:\n\n• Globus endpoint (asynchronous download)\n\n• AWS S3 (asynchronous download)\n\n The caller provides a list of collection paths or data object paths, and destination information for their Globus Endpoint or S3 bucket where they are looking to download the data to.  When downloading a list of collections or a list of data objects to a Globus endpoint or to an S3 bucket, the attributesFile.json must have the destination information as shown in the *attributesFile.json* example above. \n \n \n\n\n**Note**: A MoDaC user account is a pre-requisite for downloading data from MoDaC. For a Globus destination, if you set the optional *destinationOverwrite* indicator to ‘true’ and if the destination collection exists, this service overwrites the destination collection. If you omit this indicator and the destination collection exists, then this service rejects the transfer request.\n\nAdditionally, for downloading to a Globus endpoint, **MODAC-PROD-App-Accts-Pool-NCI_DOE** group must be added to your globus endoint and it should also be given *WRITE* permission. For details on how to add permission to your endpoint, refer to [Preparing to Use Globus](https://wiki.nci.nih.gov/display/MoDaCdoc/Preparing+to+Use+Globus) wiki page.\n\nAn optional *appendPathToDownloadDestination* indicator can be provide. If set to true, the entire object path will be used when files are created in the download destination, otherwise, just the file name will be used. By default this indicator is set to true.\n\n\n1. **CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @<attributesFile.json> -X POST https://modac.cancer.gov/api/v2/download -H \"Accept: application/json\" -D  <response-header> -o <response-message.json> -u <Your Email ID>\n \n ```\n 2.  **attributesFile.json Example**\n \n ```\n  a. To request a download to a Globus endpoint\n        {\n             \"collectionPaths\" : [\n                 \"/NCI_DOE_Archive/MoDaC_3_4/3_4_2021_identifier\",\n                 \"/NCI_DOE_Archive/MoDaC/12_1_2020/Data_12_1\"\n        ],\n        \"globusDownloadDestination\": {\n                \"destinationOverwrite\" : true,\n                  \"destinationLocation\": {\n                      \"fileContainerId\": \"16572124-19cb-11e9-934d-0f4\",\n                          \"fileId\": \"bulk-collections-1_28_2021_2nd\"\n                        }\n        }\n        }\n        \n  b. To request a download to AWS S3\n        {\n          \"collectionPaths\": [\n            \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_2/anl_drug_moa_information\",\n            \"/NCI_DOE_Archive/JDACS4C/JDACS4C_Pilot_2/anl_drug_moa_information\"\n          ],\n          \"s3DownloadDestination\": {\n          \"destinationLocation\": {\n            \"fileContainerId\": \"DOE-bucket\",\n            \"fileId\": \"canl_drug_moa_information\"\n          },\n          \"account\": {\n            \"accessKey\": \"your-access-key\",\n            \"secretKey\": \"your-secret-key\",\n            \"region\": \"us-east-2\"\n          }\n        },\n        \"appendPathToDownloadDestination\": true\n      }\n\n\n ```\n 3. **EXAMPLE - CURL COMMAND**\n ```\n curl -k -H \"Content-Type: application/json\" -d @attributesFile.json -X POST https://modac.cancer.gov/api/v2/download -H \"Accept: application/json\" -D header.txt -o output.json -u us39@nih.gov\n ```\n",
        "summary": "Download objects and collections.",
        "tags": [
          "Download Data"
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "downloadRequest",
            "description": "downloadRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectDownloadRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP/1.1 200 \n\n**Output**\n\n    {\n      \"taskId\": \"892b11d1-61a5-45ea-ad29-126d733b62da\",\n      \"destinationLocation\": {\n        \"fileContainerId\": \"1657124-19cb-11e9-934d-0e69f4\",\n        \"fileContainerName\": null,\n        \"fileId\": \"collection_3_10_2021\"\n      }\n    }",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/HpcBulkDataObjectDownloadResponseDTO"
            }
          },
          "401": {
            "description": "Authentication Failure: \n\nHTTP/1.1 401 Unauthorized Content-Type: application/json\n\n\nJSON:\n\n{ \"errorType\": \"REQUEST_AUTHENTICATION_FAILED\",\n\n\"message\": \"Access Denied: LDAP authentication failed\",\n\n\"stackTrace\": \"…\" } "
          }
        }
      }
    }
  },
  "definitions": {
    "HpcBulkDataObjectDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "appendPathToDownloadDestination": {
          "type": "boolean"
        },
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDriveDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        }
      },
      "title": "HpcBulkDataObjectDownloadRequestDTO",
      "xml": {
        "name": "HpcBulkDataObjectDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkDataObjectDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationFile": {
          "xml": {
            "name": "destinationFile",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcBulkDataObjectDownloadResponseDTO",
      "xml": {
        "name": "HpcBulkDataObjectDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntries": {
      "type": "object",
      "properties": {
        "defaultCollectionMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "pathsMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcBulkMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntries",
      "xml": {
        "name": "HpcBulkMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcBulkMetadataEntry": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcBulkMetadataEntry",
      "xml": {
        "name": "HpcBulkMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDTOReq": {
      "type": "object",
      "properties": {
        "collection": {
          "xml": {
            "name": "collection",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcCollectionReq"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesReq"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcCollectionDTOReq",
      "xml": {
        "name": "HpcCollectionDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDTORes": {
      "type": "object",
      "properties": {
        "collection": {
          "xml": {
            "name": "collection",
            "attribute": false,
            "wrapped": false
          }
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesRes"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcCollectionDTORes",
      "xml": {
        "name": "HpcCollectionDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionDownloadResponseDTO",
      "xml": {
        "name": "HpcCollectionDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListDTOReq": {
      "type": "object",
      "properties": {
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionDTOReq"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcCollectionListDTOReq",
      "xml": {
        "name": "HpcCollectionListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListDTORes": {
      "type": "object",
      "properties": {
        "collectionPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionDTORes"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcCollectionListDTORes",
      "xml": {
        "name": "HpcCollectionListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListingEntryReq": {
      "type": "object",
      "properties": {
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionListingEntryReq",
      "xml": {
        "name": "HpcCollectionListingEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionListingEntryRes": {
      "type": "object",
      "properties": {
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "xml": {
            "name": "path",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcCollectionListingEntryRes",
      "xml": {
        "name": "HpcCollectionListingEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionRegistrationDTO": {
      "type": "object",
      "properties": {
        "createParentCollections": {
          "type": "boolean"
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        }
      },
      "title": "HpcCollectionRegistrationDTO",
      "xml": {
        "name": "HpcCollectionRegistrationDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionReq": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionInheritance": {
          "type": "string",
          "xml": {
            "name": "collectionInheritance",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionMapId": {
          "type": "string",
          "xml": {
            "name": "collectionMapId",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerName": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerZone": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerZone",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionParentName": {
          "type": "string",
          "xml": {
            "name": "collectionParentName",
            "attribute": false,
            "wrapped": false
          }
        },
        "comments": {
          "type": "string",
          "xml": {
            "name": "comments",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryReq"
          }
        },
        "info1": {
          "type": "string",
          "xml": {
            "name": "info1",
            "attribute": false,
            "wrapped": false
          }
        },
        "info2": {
          "type": "string",
          "xml": {
            "name": "info2",
            "attribute": false,
            "wrapped": false
          }
        },
        "specColType": {
          "type": "string",
          "xml": {
            "name": "specColType",
            "attribute": false,
            "wrapped": false
          }
        },
        "subCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryReq"
          }
        }
      },
      "title": "HpcCollectionReq",
      "xml": {
        "name": "HpcCollection",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCollectionRes": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionInheritance": {
          "type": "string",
          "xml": {
            "name": "collectionInheritance",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionMapId": {
          "type": "string",
          "xml": {
            "name": "collectionMapId",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerName": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionOwnerZone": {
          "type": "string",
          "xml": {
            "name": "collectionOwnerZone",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionParentName": {
          "type": "string",
          "xml": {
            "name": "collectionParentName",
            "attribute": false,
            "wrapped": false
          }
        },
        "comments": {
          "type": "string",
          "xml": {
            "name": "comments",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryRes"
          }
        },
        "info1": {
          "type": "string",
          "xml": {
            "name": "info1",
            "attribute": false,
            "wrapped": false
          }
        },
        "info2": {
          "type": "string",
          "xml": {
            "name": "info2",
            "attribute": false,
            "wrapped": false
          }
        },
        "specColType": {
          "type": "string",
          "xml": {
            "name": "specColType",
            "attribute": false,
            "wrapped": false
          }
        },
        "subCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCollectionListingEntryRes"
          }
        }
      },
      "title": "HpcCollectionRes",
      "xml": {
        "name": "HpcCollection",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQuery": {
      "type": "object",
      "properties": {
        "compoundQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcCompoundMetadataQuery"
          }
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "AND",
            "OR"
          ]
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataQuery"
          }
        }
      },
      "title": "HpcCompoundMetadataQuery",
      "xml": {
        "name": "HpcCompoundMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcCompoundMetadataQueryDTO": {
      "type": "object",
      "properties": {
        "compoundQuery": {
          "xml": {
            "name": "compoundQuery",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcCompoundMetadataQuery"
        },
        "compoundQueryType": {
          "type": "string",
          "xml": {
            "name": "compoundQueryType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "COLLECTION",
            "DATA_OBJECT"
          ]
        },
        "detailedResponse": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "boolean"
        }
      },
      "title": "HpcCompoundMetadataQueryDTO",
      "xml": {
        "name": "HpcCompoundMetadataQueryDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDTOReq": {
      "type": "object",
      "properties": {
        "dataObject": {
          "xml": {
            "name": "dataObject",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcDataObjectReq"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesReq"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcDataObjectDTOReq",
      "xml": {
        "name": "HpcDataObjectDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDTORes": {
      "type": "object",
      "properties": {
        "dataObject": {
          "xml": {
            "name": "dataObject",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcDataObjectRes"
        },
        "metadataEntries": {
          "xml": {
            "name": "metadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataEntriesRes"
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32"
        },
        "permission": {
          "type": "string",
          "xml": {
            "name": "permission",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "NONE",
            "OWN",
            "READ",
            "WRITE"
          ]
        }
      },
      "title": "HpcDataObjectDTORes",
      "xml": {
        "name": "HpcDataObjectDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectDownloadResponseDTO": {
      "type": "object",
      "properties": {
        "destinationFile": {
          "xml": {
            "name": "destinationFile",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "downloadRequestURL": {
          "type": "string",
          "xml": {
            "name": "downloadRequestURL",
            "attribute": false,
            "wrapped": false
          }
        },
        "restoreInProgress": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string",
          "xml": {
            "name": "taskId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcDataObjectDownloadResponseDTO",
      "xml": {
        "name": "HpcDataObjectDownloadResponseDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectListDTOReq": {
      "type": "object",
      "properties": {
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectDTOReq"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectListDTOReq",
      "xml": {
        "name": "HpcDataObjectListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectListDTORes": {
      "type": "object",
      "properties": {
        "dataObjectPaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcDataObjectDTORes"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectListDTORes",
      "xml": {
        "name": "HpcDataObjectListDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRegistrationRequestDTO": {
      "type": "object",
      "properties": {
        "callerObjectId": {
          "type": "string",
          "xml": {
            "name": "callerObjectId",
            "attribute": false,
            "wrapped": false
          }
        },
        "checksum": {
          "type": "string",
          "xml": {
            "name": "checksum",
            "attribute": false,
            "wrapped": false
          }
        },
        "createParentCollections": {
          "type": "boolean"
        },
        "extractMetadata": {
          "type": "boolean"
        },
        "extractedMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "fileSystemUploadSource": {
          "xml": {
            "name": "fileSystemUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "generateUploadRequestURL": {
          "type": "boolean"
        },
        "globusUploadSource": {
          "xml": {
            "name": "globusUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcUploadSource"
        },
        "googleDriveUploadSource": {
          "xml": {
            "name": "googleDriveUploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "linkSourcePath": {
          "type": "string",
          "xml": {
            "name": "linkSourcePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "metadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "parentCollectionsBulkMetadataEntries": {
          "xml": {
            "name": "parentCollectionsBulkMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcBulkMetadataEntries"
        },
        "s3UploadSource": {
          "xml": {
            "name": "s3UploadSource",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcStreamingUploadSource"
        },
        "uploadParts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectRegistrationRequestDTO",
      "xml": {
        "name": "HpcDataObjectRegistrationRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectReq": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataName": {
          "type": "string",
          "xml": {
            "name": "dataName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataOwnerName": {
          "type": "string",
          "xml": {
            "name": "dataOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataPath": {
          "type": "string",
          "xml": {
            "name": "dataPath",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectReq",
      "xml": {
        "name": "HpcDataObject",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDataObjectRes": {
      "type": "object",
      "properties": {
        "absolutePath": {
          "type": "string",
          "xml": {
            "name": "absolutePath",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "collectionName": {
          "type": "string",
          "xml": {
            "name": "collectionName",
            "attribute": false,
            "wrapped": false
          }
        },
        "createdAt": {
          "xml": {
            "name": "createdAt",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataName": {
          "type": "string",
          "xml": {
            "name": "dataName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataOwnerName": {
          "type": "string",
          "xml": {
            "name": "dataOwnerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataPath": {
          "type": "string",
          "xml": {
            "name": "dataPath",
            "attribute": false,
            "wrapped": false
          }
        },
        "dataSize": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HpcDataObjectRes",
      "xml": {
        "name": "HpcDataObject",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcDownloadRequestDTO": {
      "type": "object",
      "properties": {
        "globusDownloadDestination": {
          "xml": {
            "name": "globusDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGlobusDownloadDestination"
        },
        "googleDriveDownloadDestination": {
          "xml": {
            "name": "googleDriveDownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcGoogleDriveDownloadDestination"
        },
        "s3DownloadDestination": {
          "xml": {
            "name": "s3DownloadDestination",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3DownloadDestination"
        },
        "synchronousDownloadFilter": {
          "xml": {
            "name": "synchronousDownloadFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcSynchronousDownloadFilter"
        }
      },
      "title": "HpcDownloadRequestDTO",
      "xml": {
        "name": "HpcDownloadRequestDTO",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcFileLocation": {
      "type": "object",
      "properties": {
        "fileContainerId": {
          "type": "string",
          "xml": {
            "name": "fileContainerId",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileContainerName": {
          "type": "string",
          "xml": {
            "name": "fileContainerName",
            "attribute": false,
            "wrapped": false
          }
        },
        "fileId": {
          "type": "string",
          "xml": {
            "name": "fileId",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcFileLocation",
      "xml": {
        "name": "HpcFileLocation",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGlobusDownloadDestination": {
      "type": "object",
      "properties": {
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "destinationOverwrite": {
          "type": "boolean"
        }
      },
      "title": "HpcGlobusDownloadDestination",
      "xml": {
        "name": "HpcGlobusDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcGoogleDriveDownloadDestination": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcGoogleDriveDownloadDestination",
      "xml": {
        "name": "HpcGoogleDriveDownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntriesReq": {
      "type": "object",
      "properties": {
        "parentMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "selfMetadataEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcMetadataEntriesReq",
      "xml": {
        "name": "HpcMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntriesRes": {
      "type": "object",
      "properties": {
        "parentMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "parentMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        },
        "selfMetadataEntries": {
          "type": "array",
          "xml": {
            "name": "selfMetadataEntries",
            "attribute": false,
            "wrapped": false
          },
          "items": {
            "$ref": "#/definitions/HpcMetadataEntry"
          }
        }
      },
      "title": "HpcMetadataEntriesRes",
      "xml": {
        "name": "HpcMetadataEntries",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataEntry": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "levelLabel": {
          "type": "string",
          "xml": {
            "name": "levelLabel",
            "attribute": false,
            "wrapped": false
          }
        },
        "unit": {
          "type": "string",
          "xml": {
            "name": "unit",
            "attribute": false,
            "wrapped": false
          }
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataEntry",
      "xml": {
        "name": "HpcMetadataEntry",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQuery": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "xml": {
            "name": "attribute",
            "attribute": false,
            "wrapped": false
          }
        },
        "attributeMatch": {
          "type": "string",
          "xml": {
            "name": "attributeMatch",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "ANY",
            "EXACT"
          ]
        },
        "format": {
          "type": "string",
          "xml": {
            "name": "format",
            "attribute": false,
            "wrapped": false
          }
        },
        "levelFilter": {
          "xml": {
            "name": "levelFilter",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcMetadataQueryLevelFilter"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "value",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcMetadataQuery",
      "xml": {
        "name": "HpcMetadataQuery",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcMetadataQueryLevelFilter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "xml": {
            "name": "label",
            "attribute": false,
            "wrapped": false
          }
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "operator": {
          "type": "string",
          "xml": {
            "name": "operator",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "EQUAL",
            "LIKE",
            "NOT_EQUAL",
            "NUM_GREATER_OR_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_LESS_OR_EQUAL",
            "NUM_LESS_THAN",
            "TIMESTAMP_GREATER_OR_EQUAL",
            "TIMESTAMP_GREATER_THAN",
            "TIMESTAMP_LESS_OR_EQUAL",
            "TIMESTAMP_LESS_THAN"
          ]
        }
      },
      "title": "HpcMetadataQueryLevelFilter",
      "xml": {
        "name": "HpcMetadataQueryLevelFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3Account": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string",
          "xml": {
            "name": "accessKey",
            "attribute": false,
            "wrapped": false
          }
        },
        "pathStyleAccessEnabled": {
          "type": "boolean"
        },
        "region": {
          "type": "string",
          "xml": {
            "name": "region",
            "attribute": false,
            "wrapped": false
          }
        },
        "secretKey": {
          "type": "string",
          "xml": {
            "name": "secretKey",
            "attribute": false,
            "wrapped": false
          }
        },
        "url": {
          "type": "string",
          "xml": {
            "name": "url",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcS3Account",
      "xml": {
        "name": "HpcS3Account",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcS3DownloadDestination": {
      "type": "object",
      "properties": {
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "destinationLocation": {
          "xml": {
            "name": "destinationLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcS3DownloadDestination",
      "xml": {
        "name": "HpcS3DownloadDestination",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcStreamingUploadSource": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "xml": {
            "name": "accessToken",
            "attribute": false,
            "wrapped": false
          }
        },
        "account": {
          "xml": {
            "name": "account",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcS3Account"
        },
        "sourceInputStream": {
          "xml": {
            "name": "sourceInputStream",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/InputStream"
        },
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        },
        "sourceSize": {
          "type": "integer",
          "format": "int64"
        },
        "sourceURL": {
          "type": "string",
          "xml": {
            "name": "sourceURL",
            "attribute": false,
            "wrapped": false
          }
        }
      },
      "title": "HpcStreamingUploadSource",
      "xml": {
        "name": "HpcStreamingUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcSynchronousDownloadFilter": {
      "type": "object",
      "properties": {
        "compressedArchiveType": {
          "type": "string",
          "xml": {
            "name": "compressedArchiveType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "TAR",
            "TGZ",
            "ZIP"
          ]
        },
        "includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "patternType": {
          "type": "string",
          "xml": {
            "name": "patternType",
            "attribute": false,
            "wrapped": false
          },
          "enum": [
            "REGEX",
            "SIMPLE"
          ]
        }
      },
      "title": "HpcSynchronousDownloadFilter",
      "xml": {
        "name": "HpcSynchronousDownloadFilter",
        "attribute": false,
        "wrapped": false
      }
    },
    "HpcUploadSource": {
      "type": "object",
      "properties": {
        "sourceLocation": {
          "xml": {
            "name": "sourceLocation",
            "attribute": false,
            "wrapped": false
          },
          "$ref": "#/definitions/HpcFileLocation"
        }
      },
      "title": "HpcUploadSource",
      "xml": {
        "name": "HpcUploadSource",
        "attribute": false,
        "wrapped": false
      }
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "Locale": {
      "type": "object",
      "title": "Locale"
    }
  }
}